{"version":3,"sources":["components/const.js","components/SearchArea.js","components/Movies/MovieCard.js","components/Movies/MovieList.js","components/Movies/Pagination.js","components/Movies/Movies.js","components/Watchlist/WatchlistInput.js","components/Watchlist/WatchlistItem.js","components/Watchlist/WatchlistContainer.js","components/Watchlist/Watchlist.js","components/AlreadySeen/AlreadySeen.js","components/Top250/Top250.js","components/Movies/MovieDetail.js","components/App.js","serviceWorker.js","index.js"],"names":["URL_SEARCH","URL_DETAIL","URL_IMG","DEFAULT_POSTER","API_KEY","SearchArea","props","className","onSubmit","handleSubmit","onChange","handleChange","type","placeholder","minLength","defaultValue","handleSort","disabled","value","MovieCard","undefined","release_date","image","src","alt","voteAverage","viewBox","d","strokeDasharray","x","y","title","substring","MovieList","movies","map","movie","key","id","to","poster_path","vote_average","Pagination","pageLinks","i","activePage","currentPage","push","onClick","nextPage","pages","xmlns","aria-hidden","focusable","data-prefix","data-icon","role","fill","Movies","event","setState","searchTerm","target","preventDefault","form","fetch","state","then","data","json","results","totalPages","total_pages","totalResults","total_results","reset","console","log","pageNumber","sort","numberPages","this","sortedMovies","a","b","parseInt","React","Component","getSuggestionValue","suggestion","renderSuggestion","WatchlistInput","getSuggestions","escapedValue","encodeURIComponent","trim","url","suggestions","isLoading","length","noResults","error","Error","newValue","debouncedSuggestions","debounce","onSuggestionsFetchRequested","onSuggestionsClearRequested","onSuggestionSelected","suggestionValue","suggestionIndex","sectionIndex","method","addWatchlistItem","noResult","inputProps","htmlFor","slice","focusInputOnSuggestionClick","WatchlistItem","tabIndex","completed","aria-label","watchlistItem","handleReset","handleComplete","handleClose","WatchlistContainer","bind","e","updateWatchlistItemStatus","removeWatchlistItem","listItems","upNextItems","completedItems","forEach","item","listItem","upNextDisplay","getLists","completedDisplay","Watchlist","storageError","canAccessLocalStorage","checkLocalStorage","watchlistArray","getWatchlistStorage","nextID","getNextIDStorage","localStorage","setItem","removeItem","JSON","parse","getItem","watchlist","stringify","filter","updatedID","checkDuplicateID","updatedList","concat","updateStorage","status","AlreadySeen","Top250","MovieDetail","match","useEffect","fetchItem","fetchTrailer","trailerId","useState","params","trailer","setTrailer","isEmpty","obj","hasOwnProperty","backdrop_path","genres","genre","name","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a8112ad6.chunk.js","sourcesContent":["export const URL_LIST = 'https://api.themoviedb.org/3/discover/movie';\r\nexport const URL_SEARCH = 'https://api.themoviedb.org/3/search/movie';\r\nexport const URL_DETAIL = 'https://api.themoviedb.org/3/movie/';\r\nexport const URL_PERSON = 'https://api.themoviedb.org/3/person/';\r\nexport const URL_IMG = 'https://image.tmdb.org/t/p/';\r\nexport const DEFAULT_POSTER = 'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie-300x450.jpg';\r\nexport const URL_BACKDROP = 'https://image.tmdb.org/t/p/original';\r\nexport const URL_YOUTUBE = 'https://www.youtube.com/embed/';\r\nexport const URL_CAST = '/casts';\r\nexport const URL_VIDEO = '/videos';\r\nexport const IMG_SIZE_XSMALL = 'w45/';\r\nexport const IMG_SIZE_SMALL = 'w185/';\r\nexport const IMG_SIZE_LARGE = 'w342/';\r\nexport const CAST_MAX_NUM = 5;\r\nexport const API_KEY = '?api_key=090028bc6de357f7dbfd5aeebae43718';\r\nexport const STORAGE_LIST = 'watchlist-app-list';\r\nexport const STORAGE_NEXTID = 'watchlist-app-nextid';\r\n","import React from 'react';\r\n/* import Autosuggest from 'react-autosuggest' */\r\n\r\nconst SearchArea = (props) => {\r\n    return (\r\n        <div className=\"search-box\">\r\n            <form onSubmit={props.handleSubmit}>\r\n                <input \r\n                    onChange={props.handleChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What are you looking for?\"\r\n                    minLength={3}\r\n                />           \r\n                <select className=\"sort-box\" defaultValue=\"Sort\" onChange={props.handleSort}>\r\n                    <option disabled value=\"Sort\">Sort</option>\r\n                    <option value=\"Newest\">Newest</option>\r\n                    <option value=\"Oldest\">Oldest</option>\r\n                    <option value=\"RatingAsc\">By Rating Asc</option>\r\n                    <option value=\"RatingDesc\">By Rating Desc</option>\r\n                </select>\r\n            </form>\r\n        </div>        \r\n    )    \r\n}\r\n\r\nexport default SearchArea;","import React from 'react';\r\nimport { URL_IMG, IMG_SIZE_SMALL, DEFAULT_POSTER } from \"../const\"\r\n\r\nconst MovieCard = (props) => {\r\n    if (props.release_date === undefined) {\r\n        return \"\"\r\n    }\r\n    return (\r\n        <div className=\"movie\">\r\n            {\r\n                props.image === null \r\n                ? <img className=\"movie__pic\" src={DEFAULT_POSTER} alt=\"Movie Poster\" /> \r\n                : <img className=\"movie__pic\" src={`${URL_IMG+IMG_SIZE_SMALL+props.image}`} alt=\"Movie Poster\" />\r\n            }\r\n            <div className=\"movie__overlay\">\r\n                {\r\n                    props.voteAverage === 0\r\n                    ? \"\"\r\n                    : <div className=\"movie__rating\">\r\n                        <svg viewBox=\"0 0 36 36\" className=\"circular-chart\">                            \r\n                            <path className=\"circle-bg\"\r\n                            d=\"M18 2.0845\r\n                                a 15.9155 15.9155 0 0 1 0 31.831\r\n                                a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                            />\r\n                            <path className=\"circle\"\r\n                            strokeDasharray=\"78, 100\"\r\n                            d=\"M18 2.0845\r\n                                a 15.9155 15.9155 0 0 1 0 31.831\r\n                                a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                            />\r\n                            <text x=\"18\" y=\"21.5\" className=\"percentage\">{props.voteAverage}</text>\r\n                        </svg>\r\n                    </div>\r\n                }\r\n                <div className=\"movie__info\">\r\n                    <h3 className=\"movie__title\">{props.title}</h3>\r\n                    {\r\n                        props.release_date === \"\"\r\n                        ? \"\"\r\n                        : <div className=\"movie__date\">\r\n                            <span>Release Date: {props.release_date.substring(0,4)}</span>                                                \r\n                        </div>                    \r\n                    }                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MovieCard","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport MovieCard from './MovieCard'\r\n\r\nconst MovieList = (props) => {\r\n    // if\r\n        \r\n    return (\r\n        <div className=\"movies__list\">\r\n            {                \r\n                props.movies.map((movie) => {                     \r\n                    return (\r\n                        <Link key={movie.id} to={`/movie/${movie.id}`}>                                                        \r\n                            <MovieCard                                 \r\n                                key={movie.id} \r\n                                image={movie.poster_path}\r\n                                title={movie.title}\r\n                                voteAverage={movie.vote_average} \r\n                                release_date={movie.release_date}\r\n                                movies={props.movies}\r\n                            />  \r\n                        </Link>                      \r\n                    )                  \r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieList","import React from 'react';\r\n\r\nconst Pagination = (props) => {\r\n    const pageLinks = [];\r\n\r\n    for(let i = 1; i <= props.pages; i++) {\r\n        let activePage = props.currentPage === i ? 'activePage' : '';\r\n\r\n        pageLinks.push(\r\n            <li \r\n                className={`pages__number ${activePage}`} \r\n                key={i} \r\n                onClick={() => props.nextPage(i)}\r\n            >\r\n                <button>{i}</button>\r\n            </li>)\r\n    }\r\n\r\n    return (\r\n        <ul className=\"pages\">\r\n            { \r\n                props.currentPage > 1 \r\n                ? <li className={`pages__number pages__arrow`} onClick={() => props.nextPage(props.currentPage - 1)}>\r\n                    <button>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"angle-double-left\" role=\"img\" viewBox=\"0 0 448 512\">\r\n                            <path fill=\"currentColor\" d=\"M223.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L319.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L393.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34zm-192 34l136 136c9.4 9.4 24.6 9.4 33.9 0l22.6-22.6c9.4-9.4 9.4-24.6 0-33.9L127.9 256l96.4-96.4c9.4-9.4 9.4-24.6 0-33.9L201.7 103c-9.4-9.4-24.6-9.4-33.9 0l-136 136c-9.5 9.4-9.5 24.6-.1 34z\"/>\r\n                        </svg>\r\n                    </button>\r\n                </li>\r\n                : \"\"\r\n            }\r\n            { pageLinks }\r\n            { \r\n                props.currentPage < props.pages \r\n                ? <li className={`pages__number pages__arrow`} onClick={() => props.nextPage(props.currentPage + 1)}>\r\n                    <button>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"angle-double-right\" role=\"img\" viewBox=\"0 0 448 512\">\r\n                            <path fill=\"currentColor\" d=\"M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34zm192-34l-136-136c-9.4-9.4-24.6-9.4-33.9 0l-22.6 22.6c-9.4 9.4-9.4 24.6 0 33.9l96.4 96.4-96.4 96.4c-9.4 9.4-9.4 24.6 0 33.9l22.6 22.6c9.4 9.4 24.6 9.4 33.9 0l136-136c9.4-9.2 9.4-24.4 0-33.8z\"/>\r\n                        </svg>\r\n                    </button>\r\n                </li>\r\n                : \"\"\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Pagination","import React from \"react\";\nimport { URL_SEARCH, API_KEY } from \"../const\"\nimport SearchArea from \"../SearchArea\"\nimport MovieList from \"./MovieList\"\nimport Pagination from \"./Pagination\"\n \nclass Movies extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      movies: [],\n      searchTerm: \"\",\n      totalPages: 0,\n      totalResults: 0,\n      currentPage: 1,\n      sort: \"\"\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({searchTerm: event.target.value})\n    \n  }\n  \n\n  handleSubmit = (event) => { \n    let url = URL_SEARCH + API_KEY   \n    event.preventDefault();\n    //\n    const form = event.target;\n    fetch(`${url}&query=${this.state.searchTerm}`)\n    .then(data => data.json())\n    .then(data => {      \n      this.setState({movies: [...data.results], totalPages: data.total_pages, totalResults: data.total_results})      \n      form.reset();\n      console.log(data);\n    })\n  }  \n\n  nextPage = (pageNumber) => {   \n    let url = URL_SEARCH + API_KEY  \n    fetch(`${url}&query=${this.state.searchTerm}&page=${pageNumber}`)\n    .then(data => data.json())\n    .then(data => {      \n      this.setState({movies: [...data.results], currentPage: pageNumber})\n    })\n  }  \n\n  handleSort = (event) => {    \n    this.setState({sort: event.target.value})\n  }\n\n  render() {\n\n    const numberPages = this.state.totalPages;\n\n    const sortedMovies = this.state.movies.sort((a,b) => {\n      if(this.state.sort === \"Newest\") {\n        return parseInt(b.release_date.substring(0,4)) - parseInt(a.release_date.substring(0,4))\n      }\n      else if(this.state.sort === \"Oldest\") {\n        return parseInt(a.release_date.substring(0,4)) - parseInt(b.release_date.substring(0,4))\n      }\n      else if(this.state.sort === \"RatingAsc\") {\n        return a.vote_average - b.vote_average\n      }\n      else if(this.state.sort === \"RatingDesc\") {\n        return b.vote_average - a.vote_average\n      }\n    });\n\n    return (\n      <div className=\"movies\">\n        <SearchArea \n          searchTerm={this.state.searchTerm}\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n          handleSort={this.handleSort}\n        />\n        <MovieList movies={sortedMovies} />\n        {\n          this.state.totalResults > 20 \n          ? <Pagination pages={numberPages} nextPage={this.nextPage} currentPage={this.state.currentPage} />\n          : \"\"\n        }\n      </div>\n    );\n  }\n}\n \nexport default Movies;","import React, { Component } from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport debounce from 'lodash/debounce';\r\nimport { URL_SEARCH, API_KEY, URL_IMG, IMG_SIZE_XSMALL, DEFAULT_POSTER } from '../const';\r\n\r\n\r\nconst getSuggestionValue = suggestion => suggestion.title;\r\n\r\nconst renderSuggestion = suggestion => {\r\n    return (    \r\n    <div className=\"suggestion\">\r\n        <div className=\"suggestion__pic\"> \r\n            {\r\n                suggestion.poster_path !== null\r\n                ? <img src={URL_IMG + IMG_SIZE_XSMALL + suggestion.poster_path} alt=\"Movie Poster\"/>    \r\n                : <img src={DEFAULT_POSTER} alt=\"Movie Poster\"/>             \r\n            }\r\n        </div>\r\n        <div className=\"suggestion__content\">\r\n            <h3 className=\"suggestion__title\">{suggestion.title}</h3>\r\n            <span>\r\n                {\r\n                (suggestion.release_date === \"\" || suggestion.release_date === undefined)\r\n                ? \"\"\r\n                : suggestion.release_date.substring(0,4)\r\n                }\r\n            </span>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nclass WatchlistInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n            suggestions: [],\r\n            noResult: false,\r\n            isLoading: false\r\n        };\r\n    }\r\n\r\n    getSuggestions = value => {\r\n        const escapedValue = encodeURIComponent(value.trim());\r\n        const url = `${URL_SEARCH + API_KEY}&query=${escapedValue}`;\r\n        let suggestions = [];\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n        if(value.trim().length > 2){\r\n            fetch(url)\r\n                .then(data => data.json())\r\n                .then(\r\n                    (data) => {\r\n                        if(data.results){\r\n                            suggestions = data.results;\r\n                            this.setState({\r\n                                suggestions: suggestions,\r\n                                noResults: suggestions.length === 0,\r\n                                isLoading: false\r\n                            });\r\n                        }else{\r\n                            this.setState({\r\n                                suggestions: [],\r\n                                noResults: true,\r\n                                isLoading: false\r\n                            });\r\n                        }\r\n                    },\r\n                    (error) => {\r\n                        console.log(error.Error);\r\n                        this.setState({\r\n                            suggestions: [],\r\n                            noResults: false,\r\n                            isLoading: false\r\n                        });\r\n                    }\r\n                );\r\n        }\r\n    };\r\n\r\n    onChange = (event, { newValue }) => {\r\n        this.setState({\r\n            value: newValue\r\n        });\r\n    };\r\n\r\n    debouncedSuggestions = debounce((value) => {\r\n        this.getSuggestions(value);\r\n    }, 500);\r\n\r\n    onSuggestionsFetchRequested = ({ value }) => {\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n        this.debouncedSuggestions(value);\r\n    };\r\n\r\n    onSuggestionsClearRequested = () => {\r\n        this.setState({\r\n            suggestions: [],\r\n            noResults: false,\r\n            isLoading: false\r\n        });\r\n    };\r\n\r\n    onSuggestionSelected = (event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) => {\r\n        this.setState({\r\n            suggestions: [],\r\n            value: '',\r\n            noResults: false,\r\n            isLoading: false\r\n        });\r\n        this.props.addWatchlistItem( suggestion );\r\n    }\r\n\r\n    render() {\r\n        const { value, suggestions, noResults, isLoading } = this.state;\r\n        const inputProps = {\r\n            placeholder: 'type in something...',\r\n            value,\r\n            onChange: this.onChange,            \r\n            id: 'watchlist-suggest-input'\r\n        };\r\n        return (\r\n            <div className=\"watchlist-input\">\r\n                <label className=\"watchlist-input__label\" htmlFor=\"watchlist-suggest-input\">Search to add Movies to your Watchlist:</label>\r\n                <div className={\"watchlist-input__control has-icons-left\"+(isLoading?\" is-loading\":\"\")}>\r\n                    <Autosuggest\r\n                        suggestions={suggestions.slice(0, 10)}\r\n                        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n                        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n                        onSuggestionSelected={this.onSuggestionSelected}\r\n                        getSuggestionValue={getSuggestionValue}\r\n                        renderSuggestion={renderSuggestion}\r\n                        inputProps={inputProps}\r\n                        focusInputOnSuggestionClick={false}\r\n                    />\r\n                    {\r\n                        noResults ? (<div className=\"no-suggestions\">Sorry, no results :(</div>) : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WatchlistInput;","import React, { Component } from 'react';\r\nimport { DEFAULT_POSTER, URL_IMG, IMG_SIZE_SMALL } from '../const';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass WatchlistItem extends Component {\r\n    render() {\r\n        return (\r\n            <div tabIndex=\"0\" \r\n                className={\"list-item \"+(this.props.completed?\"seen-item\":\"up-next-item\")} \r\n                aria-label={(this.props.completed?\"Watched: \":\"Up Next: \")}>\r\n                <div className=\"list-item__wrap\">\r\n                    <div className=\"list-item__pic\">\r\n                        {\r\n                            this.props.watchlistItem.vote_average === 0\r\n                            ? \"\"\r\n                            : <div className=\"movie__rating movie__rating_watchlist\">\r\n                                <svg viewBox=\"0 0 36 36\" className=\"circular-chart circular-chart_watchlist\">                            \r\n                                    <path className=\"circle-bg circle-bg_watchlist\"\r\n                                    d=\"M18 2.0845\r\n                                        a 15.9155 15.9155 0 0 1 0 31.831\r\n                                        a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                    />\r\n                                    <path className=\"circle circle_watchlist\"\r\n                                    strokeDasharray=\"78, 100\"\r\n                                    d=\"M18 2.0845\r\n                                        a 15.9155 15.9155 0 0 1 0 31.831\r\n                                        a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                    />\r\n                                    <text x=\"18\" y=\"21.5\" className=\"percentage percentage_watchlist\">{this.props.watchlistItem.vote_average}</text>\r\n                                </svg>\r\n                            </div>\r\n                        }\r\n                        { \r\n                            this.props.watchlistItem.poster_path !== null \r\n                            ? <img src={URL_IMG + IMG_SIZE_SMALL + this.props.watchlistItem.poster_path} alt=\"Movie Poster\"/>\r\n                            : <img src={DEFAULT_POSTER} alt=\"Movie Poster\"/>\r\n                        }\r\n                        <Link to={`/movie/${this.props.watchlistItem.id}`}>\r\n                            <div className=\"list-item__detail\"><span>Details</span></div>\r\n                        </Link>\r\n                        <div className=\"list-item__text\">\r\n                            <h3 className=\"list-item__title\">{this.props.watchlistItem.title}</h3>\r\n                            {\r\n                                this.props.watchlistItem !== \"\" \r\n                                ? <span className=\"list-item__date\">{this.props.watchlistItem.release_date.substring(0,4)}</span>\r\n                                : \"\"\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"list-item__btns\">\r\n                        { \r\n                            this.props.completed ? (\r\n                                <button className=\"list-item__reset\" onClick={this.props.handleReset} title=\"Return to Watch List\">\r\n                                    <span>undo</span>\r\n                                </button>\r\n                            ) :\r\n                            (\r\n                                <button className=\"list-item__check\" onClick={this.props.handleComplete} title=\"Mark as Watched\">\r\n                                    <span>check</span>\r\n                                </button>\r\n                            )\r\n                        }\r\n                        <button className=\"list-item__remove\" onClick={this.props.handleClose} title=\"Remove from Watch List\">\r\n                            <span>remove</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WatchlistItem;\r\n","import React, { Component } from 'react';\r\nimport WatchlistItem from './WatchlistItem';\r\n\r\nclass WatchlistContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleComplete = this.handleComplete.bind(this);\r\n        this.handleReset = this.handleReset.bind(this);\r\n    }\r\n\r\n    handleComplete(e, id){\r\n        this.props.updateWatchlistItemStatus(id, 1);\r\n    }\r\n\r\n    handleReset(e, id){\r\n        this.props.updateWatchlistItemStatus(id, 0);\r\n    }\r\n\r\n    handleClose(e, id) {\r\n        this.props.removeWatchlistItem(id);\r\n    }\r\n\r\n    getLists() {\r\n        const listItems = this.props.listItems;\r\n        const upNextItems = [];\r\n        const completedItems = [];\r\n  \r\n        listItems.forEach((item) => {\r\n            let listItem = (\r\n                <WatchlistItem \r\n                    key={item.id}\r\n                    completed={item.completed}\r\n                    watchlistItem={item.watchlistItem}\r\n                    handleClose={(e) => this.handleClose(e,item.id)} \r\n                    handleReset={(e) => this.handleReset(e,item.id)}\r\n                    handleComplete={(e) => this.handleComplete(e,item.id)}\r\n                />\r\n            )\r\n            if (item.completed) {\r\n                completedItems.push(listItem);\r\n            } else {\r\n                upNextItems.push(listItem);\r\n            }\r\n        });\r\n  \r\n        return [upNextItems, completedItems];\r\n    }\r\n\r\n    render() {\r\n        const [upNextItems, completedItems] = this.getLists();\r\n        let upNextDisplay;\r\n\r\n        if (upNextItems.length > 0) {\r\n            upNextDisplay = <div className=\"toWatch\">{upNextItems}</div>;\r\n        } else {\r\n            upNextDisplay = (\r\n              <div className=\"watchlist__empty\">\r\n                <span>how come your watchlist is empty?</span>\r\n              </div>\r\n            );\r\n        }\r\n\r\n        const completedDisplay = (\r\n            <div className=\"seen\">\r\n              <h3 className=\"seen__title\">Already Seen</h3>\r\n              <div className=\"seen__list\">{completedItems}</div>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className=\"watchlist__wrap\">\r\n              { upNextDisplay }\r\n              { completedItems.length > 0 && completedDisplay }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WatchlistContainer;","import React, { Component } from 'react';\nimport WatchlistInput from './WatchlistInput';\nimport WatchlistContainer from './WatchlistContainer';\nimport { STORAGE_LIST, STORAGE_NEXTID, URL_IMG, IMG_SIZE_XSMALL } from '../const';\n \nclass Watchlist extends Component {\n  constructor(props){\n    super(props);\n    this.storageError = false;\n    this.canAccessLocalStorage = false;\n    this.canAccessLocalStorage = this.checkLocalStorage();\n    this.state = {\n      watchlistArray: this.getWatchlistStorage(),\n      nextID: this.getNextIDStorage(),\n    };\n  }\n\n  checkLocalStorage() {\n    try {\n      localStorage.setItem(\"watchlist_test\", \"test\");\n      localStorage.removeItem(\"watchlist_test\");\n      return true;\n    }\n    catch (e) {\n      this.storageError = true;\n      return false;\n    }\n  }\n\n  getWatchlistStorage() {\n    if(this.canAccessLocalStorage){\n      try {\n        return JSON.parse(localStorage.getItem(STORAGE_LIST)) || [];\n      }\n      catch (e){\n        this.storageError = true;\n        return [];\n      }\n    }else{\n      this.storageError = true;\n      return [];\n    }\n  }\n\n  getNextIDStorage() {\n    if(this.canAccessLocalStorage){\n      try{\n        return parseInt(localStorage.getItem(STORAGE_NEXTID), 10) || 0;\n      }\n      catch (e){\n        this.storageError = true;\n        return 0;\n      }\n    }else{\n      this.storageError = true;\n      return 0;\n    }\n  }\n\n  updateStorage(watchlist, nextID){\n    if(this.canAccessLocalStorage){\n      try {\n        localStorage.setItem(STORAGE_LIST, JSON.stringify(watchlist));\n        localStorage.setItem(STORAGE_NEXTID, nextID);\n      } catch (e) {\n        this.storageError = true;\n      }\n    }else{\n      this.storageError = true;\n    }\n  }\n\n  checkDuplicateID(id){\n    let matches = this.state.watchlistArray.filter((item) => item.watchlistItem.id === id);\n    return matches.length;\n  }\n\n  addWatchlistItem(watchlistItem) {\n    let updatedID = parseInt(this.state.nextID, 10) + 1;\n    if(!this.checkDuplicateID(watchlistItem.id)){\n      let newItem = [{\n        id:updatedID, \n        watchlistItem: watchlistItem\n      }];\n      let updatedList = newItem.concat(this.state.watchlistArray);\n      this.setState({\n        watchlistArray: updatedList,\n        nextID: updatedID\n      });\n      this.updateStorage(updatedList, updatedID);\n    }\n  }\n\n  removeWatchlistItem(id) {\n    let updatedList = this.state.watchlistArray.filter((item) => item.id !== id);\n    this.setState({\n      watchlistArray: updatedList\n    });\n    this.updateStorage(updatedList, this.state.nextID);\n  }\n\n  updateWatchlistItemStatus(id,status){\n    //clone the array and then map the cloned array to set completed on the matching ID\n    const watchlistArray = this.state.watchlistArray.slice(0);\n    let updatedList = watchlistArray.map((item) => item.id !== id ? item : {...item, completed:status});\n    this.setState({\n      watchlistArray: updatedList\n    });\n    this.updateStorage(updatedList, this.state.nextID);\n  }\n\n  render() {\n    const watchlistArray = this.state.watchlistArray;\n\n    return (\n      <div className=\"watchlist\">\n        <h2 className=\"watchlist__title\">watchlist</h2>\n        <WatchlistInput \n          addWatchlistItem={(watchlistItem) => this.addWatchlistItem(watchlistItem)}\n        />\n        { this.storageError && (\n            <div id=\"storageError\">\n              Unable to access LocalStorage.\n            </div>\n          ) }\n          <WatchlistContainer\n            listItems={watchlistArray}\n            removeWatchlistItem={(id) => this.removeWatchlistItem(id)}\n            updateWatchlistItemStatus={(id, status) => this.updateWatchlistItemStatus(id, status)}\n          />                \n      </div>\n    );\n  }\n}\n \nexport default Watchlist;","import React from \"react\";\n \nclass AlreadySeen extends React.Component {\n  render() {\n    return (\n      <div>\n        <h2>ALREADY SEEN</h2>\n        <p>Cras facilisis urna ornare ex volutpat, et\n        convallis erat elementum. Ut aliquam, ipsum vitae\n        gravida suscipit, metus dui bibendum est, eget rhoncus nibh\n        metus nec massa. Maecenas hendrerit laoreet augue\n        nec molestie. Cum sociis natoque penatibus et magnis\n        dis parturient montes, nascetur ridiculus mus.</p>\n      </div>\n    );\n  }\n}\n \nexport default AlreadySeen;","import React from \"react\";\n \nclass Top250 extends React.Component {\n  render() {\n    return (\n      <div>\n        <h2>TOP 250</h2>\n        <p>Cras facilisis urna ornare ex volutpat, et\n        convallis erat elementum. Ut aliquam, ipsum vitae\n        gravida suscipit, metus dui bibendum est, eget rhoncus nibh\n        metus nec massa. Maecenas hendrerit laoreet augue\n        nec molestie. Cum sociis natoque penatibus et magnis\n        dis parturient montes, nascetur ridiculus mus.</p>\n      </div>\n    );\n  }\n}\n \nexport default Top250;","import React, { useState, useEffect } from \"react\";\r\nimport {URL_DETAIL, URL_VIDEO, URL_YOUTUBE, API_KEY, URL_IMG, IMG_SIZE_LARGE, URL_BACKDROP} from \"../const\"\r\n\r\nconst MovieDetail = ({ match }) => {\r\n    useEffect (() => {\r\n        fetchItem();\r\n        fetchTrailer();\r\n    }, []);\r\n\r\n    const [item, setItem] = useState({});\r\n\r\n    const fetchItem = async () => {\r\n        let url = URL_DETAIL + match.params.id + API_KEY\r\n        const fetchItem = await fetch(`${url}`);\r\n        const item = await fetchItem.json();\r\n        setItem(item);\r\n        console.log(item);\r\n    }\r\n\r\n    const [trailer, setTrailer] = useState({});\r\n    const fetchTrailer = async () => {\r\n        let url = URL_DETAIL + match.params.id + URL_VIDEO + API_KEY\r\n        const fetchTrailer = await fetch(`${url}`);\r\n        const trailer = await fetchTrailer.json();\r\n        if (trailer.results <= 1) {\r\n            return false\r\n        } else {\r\n            setTrailer(trailer);\r\n        }\r\n    }\r\n\r\n    function isEmpty(obj) {\r\n        for(var key in obj) {\r\n            if(obj.hasOwnProperty(key))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    let trailerId;\r\n\r\n    if (isEmpty(trailer)) {\r\n        return (<h2>Sorry, no info availble about this one =*(</h2>)\r\n    } else {\r\n        trailerId = trailer.results[0].key\r\n    } \r\n\r\n    if (isEmpty(item) || isEmpty(trailer)) {\r\n        return (\r\n            <h1>is loading</h1>\r\n        )\r\n\r\n    } else {\r\n        return (\r\n            <>\r\n            <img className=\"backdrop\" src={URL_BACKDROP+item.backdrop_path} alt=\"Background Image\"/>              \r\n            <div className=\"movie-d\">  \r\n                <div className=\"movie-d__overlay\">\r\n                    <div className=\"movie-d__info\">\r\n                        <h1>{item.title}</h1>\r\n                        {             \r\n                            item.genres.map((genre) => {\r\n                                return (\r\n                                    <span key={genre.name}>{genre.name}</span>\r\n                                )\r\n                            })\r\n                        }\r\n                        {\r\n                            item.vote_average === 0\r\n                            ? \"\"\r\n                            : <div className=\"movie__rating movie__rating_detail\">\r\n                                <svg viewBox=\"0 0 36 36\" className=\"circular-chart\">                            \r\n                                    <path className=\"circle-bg\"\r\n                                    d=\"M18 2.0845\r\n                                        a 15.9155 15.9155 0 0 1 0 31.831\r\n                                        a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                    />\r\n                                    <path className=\"circle\"\r\n                                    strokeDasharray=\"78, 100\"\r\n                                    d=\"M18 2.0845\r\n                                        a 15.9155 15.9155 0 0 1 0 31.831\r\n                                        a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                    />\r\n                                    <text x=\"18\" y=\"21.5\" className=\"percentage\">{item.vote_average}</text>\r\n                                </svg>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"movie-d__visual\">\r\n                        <div className=\"movie-d__pic\">\r\n                        {\r\n                            item.poster_path === null \r\n                            ? <img src={`https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie-300x450.jpg`} alt=\"Movie Poster\" /> \r\n                            : <img src={`${URL_IMG+IMG_SIZE_LARGE+item.poster_path}`} alt=\"Movie Poster\" />\r\n                        }\r\n                        </div>\r\n                        <div className=\"movie-d__vid\">\r\n                            <iframe title={URL_YOUTUBE + trailerId} src={URL_YOUTUBE + trailerId}/>\r\n                        </div>\r\n                    </div>\r\n                </div>              \r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieDetail\r\n","import React, { Component } from 'react';\nimport '../scss/App.scss';\nimport {\n  Route,\n  NavLink,\n  HashRouter\n} from \"react-router-dom\";\nimport Movies from \"./Movies/Movies\";\nimport Watchlist from \"./Watchlist/Watchlist\";\nimport AlreadySeen from \"./AlreadySeen/AlreadySeen\";\nimport Top250 from \"./Top250/Top250\";\nimport MovieDetail from \"./Movies/MovieDetail\"\n\nclass App extends Component {\n  render () {\n    return (\n      <>\n        <HashRouter>\n          <header className=\"header\">\n              <div className=\"wrapper\">\n                  <div className=\"header__logo\"><NavLink exact to=\"/\"><img src=\"./main_logo.png\" alt=\"Main Logo\"/></NavLink></div>\n                  <nav className=\"nav\">\n                      <ul className=\"nav__list\">\n                          <li className=\"nav__item\"><NavLink exact to=\"/\">Home</NavLink></li>\n                          <li className=\"nav__item\"><NavLink to=\"/Watchlist\">Watchlist</NavLink></li>\n                          <li className=\"nav__item\"><NavLink to=\"/AlreadySeen\">Already Seen</NavLink></li>\n                          <li className=\"nav__item\"><NavLink to=\"/Top250\">Top250</NavLink></li>\n                      </ul>\n                  </nav>\n              </div>\n          </header>\n          <main className=\"main\">\n            <div className=\"wrapper\">\n                <Route exact path=\"/\" component={Movies}/>\n                <Route path=\"/Watchlist\" component={Watchlist}/>\n                <Route path=\"/AlreadySeen\" component={AlreadySeen}/>\n                <Route path=\"/Top250\" component={Top250}/>\n                <Route path=\"/Movie/:id\" component={MovieDetail}/>\n            </div>\n          </main>\n        </HashRouter>\n      </>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}