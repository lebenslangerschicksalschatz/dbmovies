{"version":3,"sources":["components/const.js","components/SearchArea.js","components/Movies/MovieCard.js","components/Movies/MovieList.js","components/Movies/Pagination.js","components/Movies/PopularList.js","components/Movies/Popular.js","components/Movies/Movies.js","components/Watchlist/WatchlistInput.js","components/Watchlist/WatchlistItem.js","components/Watchlist/WatchlistContainer.js","components/Watchlist/Watchlist.js","components/AlreadySeen/StarRating.js","components/AlreadySeen/useKeyPress.js","components/AlreadySeen/useOnClickOutside.js","components/AlreadySeen/UserNotes.js","components/AlreadySeen/AlreadySeen.js","components/Top250/Top250.js","components/Movies/MovieDetail.js","components/App.js","serviceWorker.js","index.js"],"names":["URL_SEARCH","URL_DETAIL","URL_IMG","DEFAULT_POSTER","API_KEY","SearchArea","props","className","onSubmit","handleSubmit","onChange","handleChange","type","placeholder","minLength","xmlns","aria-hidden","focusable","data-prefix","data-icon","role","viewBox","fill","d","defaultValue","handleSort","disabled","value","MovieCard","image","src","alt","voteAverage","strokeDasharray","x","y","title","undefined","release_date","substring","MovieList","movies","map","movie","key","id","to","poster_path","vote_average","Pagination","pageLinks","i","activePage","currentPage","push","onClick","nextPage","pages","PopularList","slice","console","log","speed","slidesToShow","slidesToScroll","centerMode","variableWidth","infinite","arrows","autoplay","autoplaySpeed","centerPadding","backdrop_path","Popular","useEffect","fetchPopular","useState","popular","setPopular","isLoading","setIsLoading","a","url","fetch","json","data","results","Movies","event","setState","searchTerm","target","preventDefault","form","state","then","totalResults","total_results","totalPages","total_pages","reset","pageNumber","sort","sortedMovies","this","b","parseInt","length","React","Component","getSuggestionValue","suggestion","renderSuggestion","WatchlistInput","getSuggestions","escapedValue","encodeURIComponent","trim","suggestions","noResults","error","Error","newValue","debouncedSuggestions","debounce","onSuggestionsFetchRequested","onSuggestionsClearRequested","onSuggestionSelected","suggestionValue","suggestionIndex","sectionIndex","method","addWatchlistItem","noResult","inputProps","htmlFor","focusInputOnSuggestionClick","WatchlistItem","tabIndex","completed","aria-label","watchlistItem","handleReset","handleComplete","handleClose","WatchlistContainer","bind","e","updateWatchlistItemStatus","removeWatchlistItem","listItems","upNextItems","completedItems","forEach","item","listItem","upNextDisplay","getLists","completedDisplay","Watchlist","canAccessLocalStorage","checkLocalStorage","watchlistArray","getWatchlistStorage","nextID","getNextIDStorage","localStorage","setItem","removeItem","storageError","JSON","parse","getItem","watchlist","stringify","filter","updatedID","checkDuplicateID","updatedList","rating","concat","updateStorage","status","Star","selected","f","StarRating","totalStars","movieID","setWatchlistArray","starsSelected","selectStar","updateWatchlistItemRating","Array","n","star","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","window","addEventListener","removeEventListener","useOnClickOutside","ref","handler","listener","current","contains","document","UserNotes","isInputActive","setIsInputActive","text","inputValue","setInputValue","wrapperRef","useRef","textRef","inputRef","enter","useKeypress","focus","AlreadySeen","setSearchTerm","seenlistArray","seenlist","getSeenlist","FilteredSeenlistArray","toLowerCase","includes","storedHeading","setStoredHeading","onSetText","Top250","MovieDetail","match","fetchItem","fetchTrailer","trailer","setTrailer","params","isEmpty","obj","hasOwnProperty","setNextID","some","checkIfSeen","tagline","genres","genre","name","Number","addSeenItem","overview","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2SAAaA,EAAa,4CACbC,EAAa,sCAGbC,EAAU,8BACVC,EAAiB,qFAUjBC,EAAU,4CCkBRC,EA9BI,SAACC,GAChB,OACI,yBAAKC,UAAU,cACX,0BAAMC,SAAUF,EAAMG,cAClB,yBAAKF,UAAU,qBACX,2BACIG,SAAUJ,EAAMK,aAChBC,KAAK,OACLC,YAAY,4BACZC,UAAW,IAGf,4BAAQP,UAAU,kBAAkBK,KAAK,SAASJ,SAAUF,EAAMG,cAC9D,yBAAKM,MAAM,6BAA6BC,cAAY,OAAOC,UAAU,QAAQC,cAAY,MAAMC,YAAU,SAASC,KAAK,MAAMC,QAAQ,eACjI,0BAAMC,KAAK,eAAeC,EAAE,iWAIxC,4BAAQhB,UAAU,WAAWiB,aAAa,OAAOd,SAAUJ,EAAMmB,YAC7D,4BAAQC,UAAQ,EAACC,MAAM,QAAvB,QACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,aAAd,iBACA,4BAAQA,MAAM,cAAd,sBCsBLC,EA7CG,SAACtB,GACf,OACI,yBAAKC,UAAU,SAES,OAAhBD,EAAMuB,MACJ,yBAAKtB,UAAU,aAAauB,IAAK3B,EAAgB4B,IAAI,iBACrD,yBAAKxB,UAAU,aAAauB,IAAG,UAAK5B,EFGxB,QEH+CI,EAAMuB,OAASE,IAAI,iBAEpF,yBAAKxB,UAAU,kBAEe,IAAtBD,EAAM0B,YACJ,KACA,yBAAKzB,UAAU,iBACb,yBAAKc,QAAQ,YAAYd,UAAU,kBAC/B,0BAAMA,UAAU,YAChBgB,EAAE,sFAIF,0BAAMhB,UAAU,SAChB0B,gBAAgB,UAChBV,EAAE,sFAIF,0BAAMW,EAAE,KAAKC,EAAE,OAAO5B,UAAU,cAAcD,EAAM0B,eAIhE,yBAAKzB,UAAU,eACX,wBAAIA,UAAU,gBAAgBD,EAAM8B,YAETC,IAAvB/B,EAAMgC,aACJ,KACA,yBAAK/B,UAAU,eACb,+CAAqBD,EAAMgC,aAAaC,UAAU,EAAE,SCTjEC,EAzBG,SAAClC,GAGf,OACI,yBAAKC,UAAU,gBAEPD,EAAMmC,OAAOC,KAAI,SAACC,GACd,OACI,kBAAC,IAAD,CAAMC,IAAKD,EAAME,GAAIC,GAAE,iBAAYH,EAAME,KACrC,kBAAC,EAAD,CACID,IAAKD,EAAME,GACXhB,MAAOc,EAAMI,YACbX,MAAOO,EAAMP,MACbJ,YAAaW,EAAMK,aACnBV,aAAcK,EAAML,aACpBG,OAAQnC,EAAMmC,eC4B/BQ,EA7CI,SAAC3C,GAGhB,IAFA,IAAM4C,EAAY,GADQ,WAGlBC,GACJ,IAAIC,EAAa9C,EAAM+C,cAAgBF,EAAI,aAAe,GAE1DD,EAAUI,KACN,wBACI/C,UAAS,wBAAmB6C,GAC5BR,IAAKO,EACLI,QAAS,kBAAMjD,EAAMkD,SAASL,KAE9B,gCAASA,MATbA,EAAI,EAAGA,GAAK7C,EAAMmD,MAAON,IAAM,EAA/BA,GAaR,OACI,wBAAI5C,UAAU,SAEND,EAAM+C,YAAc,EAClB,wBAAI9C,UAAS,6BAAgCgD,QAAS,kBAAMjD,EAAMkD,SAASlD,EAAM+C,YAAc,KAC7F,gCACI,yBAAKtC,MAAM,6BAA6BC,cAAY,OAAOC,UAAU,QAAQC,cAAY,MAAMC,YAAU,oBAAoBC,KAAK,MAAMC,QAAQ,eAC5I,0BAAMC,KAAK,eAAeC,EAAE,gYAItC,GAEJ2B,EAEE5C,EAAM+C,YAAc/C,EAAMmD,MACxB,wBAAIlD,UAAS,6BAAgCgD,QAAS,kBAAMjD,EAAMkD,SAASlD,EAAM+C,YAAc,KAC7F,gCACI,yBAAKtC,MAAM,6BAA6BC,cAAY,OAAOC,UAAU,QAAQC,cAAY,MAAMC,YAAU,qBAAqBC,KAAK,MAAMC,QAAQ,eAC7I,0BAAMC,KAAK,eAAeC,EAAE,kYAItC,K,yDC0BHmC,G,YA5DK,SAACpD,GACjB,IAAMmC,EAASnC,EAAMmC,OAAOkB,MAAM,EAAG,IAErC,OADAC,QAAQC,IAAIpB,GAER,yBAAKlC,UAAU,gBACX,wBAAIA,UAAU,uBAAd,YACA,kBAAC,IAAD,CACIuD,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,YAAY,EACZC,eAAe,EACfC,UAAU,EACVC,QAAQ,EACRC,UAAU,EACVC,cAAe,IACfC,cAAe,GAGf9B,EAAOC,KAAI,SAACC,GACR,OACI,yBAAKC,IAAKD,EAAME,GAAItC,UAAU,gBAC1B,wBAAIA,UAAU,uBAAuBoC,EAAMP,OAEnB,OAAxBO,EAAM6B,cACL,yBAAK1C,ILzBF,4BKyByBC,IAAI,eAChC,yBAAKD,IL3BN,sCK2BwBa,EAAM6B,cAAezC,IAAI,eAEjD,kBAAC,IAAD,CAAMxB,UAAU,uBAAuBuC,GAAE,iBAAYH,EAAME,KACvD,0CAGmB,IAAvBF,EAAMK,aACJ,KACA,yBAAKzC,UAAU,uCACb,yBAAKc,QAAQ,YAAYd,UAAU,yCAC/B,0BAAMA,UAAU,8BAChBgB,EAAE,sFAIF,0BAAMhB,UAAU,wBAChB0B,gBAAgB,UAChBV,EAAE,sFAIF,0BAAMW,EAAE,KAAKC,EAAE,OAAO5B,UAAU,iCAAiCoC,EAAMK,wBCrB5FyB,EA7BC,SAAC,GAAQ,eACrBC,qBAAW,WACPC,MACD,IAHiB,MAKUC,mBAAS,IALnB,mBAKbC,EALa,KAKJC,EALI,OAMcF,mBAAS,CAACG,WAAU,IANlC,mBAMbA,EANa,KAMFC,EANE,KAQdL,EAAY,uCAAG,gCAAAM,EAAA,6DACbC,EADa,UNVE,6CMWQ9E,EADV,0BAEjB4E,GAAa,GAFI,SAGUG,MAAM,GAAD,OAAID,IAHnB,cAGXP,EAHW,gBAIEA,EAAaS,OAJf,OAIXC,EAJW,OAKjBP,EAAWO,EAAKC,SAChBN,GAAa,GANI,4CAAH,qDASlB,OAAID,EACQ,yCAIJ,oCACI,kBAAC,EAAD,CAAatC,OAAQoC,MCyEtBU,E,YA5Fb,WAAYjF,GAAQ,IAAD,8BACjB,4CAAMA,KAWRK,aAAe,SAAC6E,GACd,EAAKC,SAAS,CAACC,WAAYF,EAAMG,OAAOhE,SAbvB,EAiBnBlB,aAAe,SAAC+E,GAEdA,EAAMI,iBAEN,IAAMC,EAAOL,EAAMG,OACnBR,MAAM,GAAD,OAJKnF,qFAIL,kBAAiB,EAAK8F,MAAMJ,aAChCK,MAAK,SAAAV,GAAI,OAAIA,EAAKD,UAClBW,MAAK,SAAAV,GACJ,EAAKI,SAAS,CAAChD,OAAO,YAAK4C,EAAKC,SAAUU,aAAcX,EAAKY,cAAeC,WAAYb,EAAKc,cAC7FN,EAAKO,QACLxC,QAAQC,IAAIwB,OA3BG,EA+BnB7B,SAAW,SAAC6C,GAEVlB,MAAM,GAAD,OADKnF,qFACL,kBAAiB,EAAK8F,MAAMJ,WAA5B,iBAA+CW,IACnDN,MAAK,SAAAV,GAAI,OAAIA,EAAKD,UAClBW,MAAK,SAAAV,GACJ,EAAKI,SAAS,CAAChD,OAAO,YAAK4C,EAAKC,SAAUjC,YAAagD,QApCxC,EAwCnB5E,WAAa,SAAC+D,GACZ,EAAKC,SAAS,CAACa,KAAMd,EAAMG,OAAOhE,SAvClC,EAAKmE,MAAQ,CACXrD,OAAQ,GACRiD,WAAY,GACZQ,WAAY,EACZF,aAAc,EACd3C,YAAa,EACbiD,KAAM,IARS,E,sEA4CT,IAAD,OAUDC,EAAeC,KAAKV,MAAMrD,OAAO6D,MAAK,SAACrB,EAAEwB,GAC7C,MAAuB,WAApB,EAAKX,MAAMQ,KACLI,SAASD,EAAEnE,cAAgBoE,SAASzB,EAAE3C,cAEnB,WAApB,EAAKwD,MAAMQ,KACVI,SAASzB,EAAE3C,cAAgBoE,SAASD,EAAEnE,cAEnB,cAApB,EAAKwD,MAAMQ,KACVrB,EAAEjC,aAAeyD,EAAEzD,aAEA,eAApB,EAAK8C,MAAMQ,KACVG,EAAEzD,aAAeiC,EAAEjC,kBADvB,KAKP,OACE,yBAAKzC,UAAU,UACb,kBAAC,EAAD,CACEmF,WAAYc,KAAKV,MAAMJ,WACvBjF,aAAc+F,KAAK/F,aACnBE,aAAc6F,KAAK7F,aACnBc,WAAY+E,KAAK/E,aAGY,IAA7B+E,KAAKV,MAAMrD,OAAOkE,OAChB,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWlE,OAAQ8D,IAGrBC,KAAKV,MAAME,aAAe,GACxB,kBAAC,EAAD,CAAYvC,MArCd,EAAKqC,MAAMI,YAAc,EACpB,EAAKJ,MAAMI,WAEX,EAkC+B1C,SAAUgD,KAAKhD,SAAUH,YAAamD,KAAKV,MAAMzC,cACnF,U,GAtFSuD,IAAMC,W,0CCDrBC,EAAqB,SAAAC,GAAU,OAAIA,EAAW3E,OAE9C4E,EAAmB,SAAAD,GACrB,OACA,yBAAKxG,UAAU,cACX,yBAAKA,UAAU,mBAEoB,OAA3BwG,EAAWhE,YACT,yBAAKjB,IAAK5B,ERHG,OQGyB6G,EAAWhE,YAAahB,IAAI,iBAClE,yBAAKD,IAAK3B,EAAgB4B,IAAI,kBAGxC,yBAAKxB,UAAU,uBACX,wBAAIA,UAAU,qBAAqBwG,EAAW3E,OAC9C,8BAEiC,KAA5B2E,EAAWzE,mBAAmDD,IAA5B0E,EAAWzE,aAC5C,GACAyE,EAAWzE,aAAaC,UAAU,EAAE,OAqIvC0E,E,YA5HX,WAAY3G,GAAQ,IAAD,8BACf,4CAAMA,KASV4G,eAAiB,SAAAvF,GACb,IAAMwF,EAAeC,mBAAmBzF,EAAM0F,QACxCnC,EAAG,UAAMlF,EAAaI,EAAnB,kBAAoC+G,GACzCG,EAAc,GAClB,EAAK7B,SAAS,CACVV,WAAW,IAEZpD,EAAM0F,OAAOV,OAAS,GACrBxB,MAAMD,GACDa,MAAK,SAAAV,GAAI,OAAIA,EAAKD,UAClBW,MACG,SAACV,GACMA,EAAKC,SACJgC,EAAcjC,EAAKC,QACnB,EAAKG,SAAS,CACV6B,YAAaA,EACbC,UAAkC,IAAvBD,EAAYX,OACvB5B,WAAW,KAGf,EAAKU,SAAS,CACV6B,YAAa,GACbC,WAAW,EACXxC,WAAW,OAIvB,SAACyC,GACG5D,QAAQC,IAAI2D,EAAMC,OAClB,EAAKhC,SAAS,CACV6B,YAAa,GACbC,WAAW,EACXxC,WAAW,QA1ChB,EAiDnBrE,SAAW,SAAC8E,EAAD,GAA0B,IAAhBkC,EAAe,EAAfA,SACjB,EAAKjC,SAAS,CACV9D,MAAO+F,KAnDI,EAuDnBC,qBAAuBC,KAAS,SAACjG,GAC7B,EAAKuF,eAAevF,KACrB,KAzDgB,EA2DnBkG,4BAA8B,YAAgB,IAAblG,EAAY,EAAZA,MAC7B,EAAK8D,SAAS,CACVV,WAAW,IAEf,EAAK4C,qBAAqBhG,IA/DX,EAkEnBmG,4BAA8B,WAC1B,EAAKrC,SAAS,CACV6B,YAAa,GACbC,WAAW,EACXxC,WAAW,KAtEA,EA0EnBgD,qBAAuB,SAACvC,EAAD,GAAoF,IAA1EuB,EAAyE,EAAzEA,WAAyE,EAA7DiB,gBAA6D,EAA5CC,gBAA4C,EAA3BC,aAA2B,EAAbC,OACzF,EAAK1C,SAAS,CACV6B,YAAa,GACb3F,MAAO,GACP4F,WAAW,EACXxC,WAAW,IAEf,EAAKzE,MAAM8H,iBAAkBrB,IA/E7B,EAAKjB,MAAQ,CACTnE,MAAO,GACP2F,YAAa,GACbe,UAAU,EACVtD,WAAW,GANA,E,sEAoFT,IAAD,EACgDyB,KAAKV,MAAlDnE,EADH,EACGA,MAAO2F,EADV,EACUA,YAAaC,EADvB,EACuBA,UAAWxC,EADlC,EACkCA,UACjCuD,EAAa,CACfzH,YAAa,uBACbc,QACAjB,SAAU8F,KAAK9F,SACfmC,GAAI,2BAER,OACI,yBAAKtC,UAAU,mBACX,2BAAOA,UAAU,yBAAyBgI,QAAQ,2BAAlD,2CACA,yBAAKhI,UAAU,4BAEPwE,EACG,yBAAKxE,UAAU,2BACd,yBAAKQ,MAAM,6BAA6BC,cAAY,OAAOC,UAAU,QAAQC,cAAY,MAAMC,YAAU,UAAUC,KAAK,MAAMC,QAAQ,eAClI,0BAAMC,KAAK,eAAeC,EAAE,ykBAGlC,GAEN,kBAAC,IAAD,CACI+F,YAAaA,EAAY3D,MAAM,EAAG,IAClCkE,4BAA6BrB,KAAKqB,4BAClCC,4BAA6BtB,KAAKsB,4BAClCC,qBAAsBvB,KAAKuB,qBAC3BjB,mBAAoBA,EACpBE,iBAAkBA,EAClBsB,WAAYA,EACZE,6BAA6B,IAG7BjB,EAAa,yBAAKhH,UAAU,kBAAf,wBAA8D,W,GArHtEsG,a,QC8Cd4B,E,iLAxEP,OACI,yBAAKC,SAAS,IACVnI,UAAW,cAAciG,KAAKlG,MAAMqI,UAAU,YAAY,gBAC1DC,aAAapC,KAAKlG,MAAMqI,UAAU,YAAY,aAC9C,yBAAKpI,UAAU,mBACX,yBAAKA,UAAU,kBAEmC,IAA1CiG,KAAKlG,MAAMuI,cAAc7F,aACvB,KACA,yBAAKzC,UAAU,yCACb,yBAAKc,QAAQ,YAAYd,UAAU,2CAC/B,0BAAMA,UAAU,gCAChBgB,EAAE,sFAIF,0BAAMhB,UAAU,0BAChB0B,gBAAgB,UAChBV,EAAE,sFAIF,0BAAMW,EAAE,KAAKC,EAAE,OAAO5B,UAAU,mCAAmCiG,KAAKlG,MAAMuI,cAAc7F,gBAK3D,OAAzCwD,KAAKlG,MAAMuI,cAAc9F,YACvB,yBAAKjB,IAAK5B,ETtBV,QSsBqCsG,KAAKlG,MAAMuI,cAAc9F,YAAahB,IAAI,iBAC/E,yBAAKD,IAAK3B,EAAgB4B,IAAI,iBAEpC,kBAAC,IAAD,CAAMxB,UAAU,oBAAoBuC,GAAE,iBAAY0D,KAAKlG,MAAMuI,cAAchG,KACvE,0CAEJ,yBAAKtC,UAAU,mBACX,wBAAIA,UAAU,oBAAoBiG,KAAKlG,MAAMuI,cAAczG,YAEbC,IAA1CmE,KAAKlG,MAAMuI,cAAcvG,aACvB,0BAAM/B,UAAU,mBAAmBiG,KAAKlG,MAAMuI,cAAcvG,aAAaC,UAAU,EAAE,IACrF,KAId,yBAAKhC,UAAU,mBAEPiG,KAAKlG,MAAMqI,UACP,4BAAQpI,UAAU,YAAYgD,QAASiD,KAAKlG,MAAMwI,YAAa1G,MAAM,wBACjE,yBAAKrB,MAAM,6BAA6BC,cAAY,OAAOC,UAAU,QAAQC,cAAY,MAAMC,YAAU,YAAYC,KAAK,MAAMC,QAAQ,eACpI,0BAAMC,KAAK,eAAeC,EAAE,suBAKpC,4BAAQhB,UAAU,YAAYgD,QAASiD,KAAKlG,MAAMyI,eAAgB3G,MAAM,mBACpE,yBAAKrB,MAAM,6BAA6BC,cAAY,OAAOC,UAAU,QAAQC,cAAY,MAAMC,YAAU,MAAMC,KAAK,MAAMC,QAAQ,eAC9H,0BAAMC,KAAK,eAAeC,EAAE,iVAK5C,4BAAQhB,UAAU,aAAagD,QAASiD,KAAKlG,MAAM0I,YAAa5G,MAAM,mBAClE,yBAAKrB,MAAM,6BAA6BC,cAAY,OAAOC,UAAU,QAAQC,cAAY,MAAMC,YAAU,QAAQC,KAAK,MAAMC,QAAQ,eAChI,0BAAMC,KAAK,eAAeC,EAAE,wP,GAhEhCsF,aC8EboC,E,YA7EX,WAAY3I,GAAQ,IAAD,8BACf,4CAAMA,KACD0I,YAAc,EAAKA,YAAYE,KAAjB,gBACnB,EAAKH,eAAiB,EAAKA,eAAeG,KAApB,gBACtB,EAAKJ,YAAc,EAAKA,YAAYI,KAAjB,gBAJJ,E,4EAOJC,EAAGtG,GACd2D,KAAKlG,MAAM8I,0BAA0BvG,GAAI,K,kCAGjCsG,EAAGtG,GACX2D,KAAKlG,MAAM8I,0BAA0BvG,GAAI,K,kCAGjCsG,EAAGtG,GACX2D,KAAKlG,MAAM+I,oBAAoBxG,K,iCAGvB,IAAD,OACDyG,EAAY9C,KAAKlG,MAAMgJ,UACvBC,EAAc,GACdC,EAAiB,GAoBvB,OAlBAF,EAAUG,SAAQ,SAACC,GACf,IAAIC,EACA,kBAAC,EAAD,CACI/G,IAAK8G,EAAK7G,GACV8F,UAAWe,EAAKf,UAChBE,cAAea,EAAKb,cACpBG,YAAa,SAACG,GAAD,OAAO,EAAKH,YAAYG,EAAEO,EAAK7G,KAC5CiG,YAAa,SAACK,GAAD,OAAO,EAAKL,YAAYK,EAAEO,EAAK7G,KAC5CkG,eAAgB,SAACI,GAAD,OAAO,EAAKJ,eAAeI,EAAEO,EAAK7G,OAGtD6G,EAAKf,UACLa,EAAelG,KAAKqG,GAEpBJ,EAAYjG,KAAKqG,MAIlB,CAACJ,EAAaC,K,+BAGf,IAEFI,EAFC,EACiCpD,KAAKqD,WADtC,mBACEN,EADF,KACeC,EADf,KAKDI,EADAL,EAAY5C,OAAS,EACL,yBAAKpG,UAAU,WAAWgJ,GAGxC,yBAAKhJ,UAAU,oBACb,oEAKR,IAAMuJ,EACF,yBAAKvJ,UAAU,QACb,kBAAC,IAAD,CAAMA,UAAU,cAAcuC,GAAE,gBAAhC,gBAGA,yBAAKvC,UAAU,cAAciJ,IAInC,OACI,yBAAKjJ,UAAU,mBACXqJ,EACAJ,EAAe7C,OAAS,GAAKmD,O,GAxEZjD,aCiHlBkD,E,YA/Gb,WAAYzJ,GAAO,IAAD,8BAChB,4CAAMA,KACD0J,uBAAwB,EAC7B,EAAKA,sBAAwB,EAAKC,oBAClC,EAAKnE,MAAQ,CACXoE,eAAgB,EAAKC,sBACrBC,OAAQ,EAAKC,oBANC,E,iFAWhB,IAGE,OAFAC,aAAaC,QAAQ,iBAAkB,QACvCD,aAAaE,WAAW,mBACjB,EAET,MAAOrB,GAEL,OADA3C,KAAKiE,cAAe,GACb,K,4CAKT,OAAGjE,KAAKwD,uBACGU,KAAKC,MAAML,aAAaM,QXdX,UWgBf,K,yCAKT,OAAGpE,KAAKwD,uBACCtD,SAAS4D,aAAaM,QXrBL,UWqB8B,KAE/C,I,oCAIGC,EAAWT,GACpB5D,KAAKwD,wBACJM,aAAaC,QX9BO,OW8BeG,KAAKI,UAAUD,IAClDP,aAAaC,QX9BS,SW8BeH,M,uCAI1BvH,GAEf,OADc2D,KAAKV,MAAMoE,eAAea,QAAO,SAACrB,GAAD,OAAUA,EAAKb,cAAchG,KAAOA,KACpE8D,S,uCAGAkC,GACf,IAAImC,EAAYtE,SAASF,KAAKV,MAAMsE,OAAQ,IAAM,EAClD,IAAI5D,KAAKyE,iBAAiBpC,EAAchG,IAAI,CAC1C,IAMIqI,EANU,CAAC,CACbrI,GAAGmI,EACHnC,cAAeA,EACfF,WAAW,EACXwC,OAAQ,IAEgBC,OAAO5E,KAAKV,MAAMoE,gBAC5C1D,KAAKf,SAAS,CACZyE,eAAgBgB,EAChBd,OAAQY,IAEVxE,KAAK6E,cAAcH,EAAaF,M,0CAIhBnI,GAClB,IAAIqI,EAAc1E,KAAKV,MAAMoE,eAAea,QAAO,SAACrB,GAAD,OAAUA,EAAK7G,KAAOA,KACzE2D,KAAKf,SAAS,CACZyE,eAAgBgB,IAElB1E,KAAK6E,cAAcH,EAAa1E,KAAKV,MAAMsE,U,gDAGnBvH,EAAIyI,GAE5B,IACIJ,EADmB1E,KAAKV,MAAMoE,eAAevG,MAAM,GACtBjB,KAAI,SAACgH,GAAD,OAAUA,EAAK7G,KAAOA,EAAK6G,EAAjB,eAA4BA,EAA5B,CAAkCf,UAAU2C,OAC3F9E,KAAKf,SAAS,CACZyE,eAAgBgB,IAElB1E,KAAK6E,cAAcH,EAAa1E,KAAKV,MAAMsE,U,+BAGnC,IAAD,OACDF,EAAiB1D,KAAKV,MAAMoE,eAGlC,OAFAtG,QAAQC,IAAIqG,GAGV,yBAAK3J,UAAU,aACb,wBAAIA,UAAU,oBAAd,aACA,kBAAC,EAAD,CACE6H,iBAAkB,SAACS,GAAD,OAAmB,EAAKT,iBAAiBS,MAE3DrC,KAAKwD,sBACH,kBAAC,EAAD,CACAV,UAAWY,EACXb,oBAAqB,SAACxG,GAAD,OAAQ,EAAKwG,oBAAoBxG,IACtDuG,0BAA2B,SAACvG,EAAIyI,GAAL,OAAgB,EAAKlC,0BAA0BvG,EAAIyI,MAE9E,yBAAKzI,GAAG,gBAAR,uC,GAvGYgE,aCSxB,IAAMmD,EAXN,WACI,IAGI,OAFAM,aAAaC,QAAQ,iBAAkB,QACvCD,aAAaE,WAAW,mBACjB,EAEX,MAAOrB,GACH,OAAO,GAIec,GAExBsB,EAAO,SAAC,GAA4C,IAAD,IAAzCC,gBAAyC,aAAvBjI,eAAuB,MAAb,SAAAkI,GAAC,OAAIA,GAAQ,EAErD,OACI,yBAAKlL,UAAWiL,EAAW,gBAAkB,OAAQjI,QAASA,GAC1D,yBAAKxC,MAAM,6BAA6BC,cAAY,OAAOC,UAAU,QAAQC,cAAY,MAAMC,YAAU,OAAOC,KAAK,MAAMC,QAAQ,eAC/H,0BAAMC,KAAK,eAAeC,EAAE,wQAqE7BmK,EA9DI,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,QAAST,EAAa,EAAbA,OAAa,EAERvG,mBAKrCoF,GACQU,KAAKC,MAAML,aAAaM,QZpBf,UYsBT,IAVqC,mBAE7CV,EAF6C,KAE7B2B,EAF6B,OAGxBjH,mBAYpBoF,GACOtD,SAAS4D,aAAaM,QZ3BX,UY2BoC,KAE/C,GAlBqC,mBAG7CR,EAH6C,aAIhBxF,mBAASuG,IAJO,mBAI7CW,EAJ6C,KAI9BC,EAJ8B,KA6BpD,SAASC,EAA0BnJ,EAAIsI,GACnC,IAAID,EAAchB,EAAexH,KAAI,SAACgH,GAAD,OAAUA,EAAKb,cAAchG,KAAOA,EAAK6G,EAA/B,eAA0CA,EAA1C,CAAgDyB,OAAQA,OACvGU,EAAkBX,GATtB,SAAuBL,EAAWT,GAC1BJ,IACAM,aAAaC,QZpCG,OYoCmBG,KAAKI,UAAUD,IAClDP,aAAaC,QZpCK,SYoCmBH,IAOzCiB,CAAcH,EAAad,GAK/B,OAFAxG,QAAQC,IAAIsH,GAIV,yBAAK5K,UAAU,eACb,wBAAIA,UAAU,sBAAd,YACI,kCAAQuL,EAAR,WAA+BH,EAA/B,MAEJ,yBAAKpL,UAAU,sBAEP,YAAI0L,MAAMN,IAAajJ,KAAI,SAACwJ,EAAGC,GAAJ,OACvB,kBAAC,EAAD,CACIvJ,IAAKuJ,EACLX,SAAUW,EAAOL,EACjBvI,QAAS,SAAC4F,GACN4C,EAAWI,EAAO,GAClBH,EAA0BJ,EAASO,EAAO,YC5CvDC,MAhCf,SAAqBC,GAAW,MAEMzH,oBAAS,GAFf,mBAEvB0H,EAFuB,KAEXC,EAFW,KAK9B,SAASC,EAAT,GAA8B,EAAP5J,MACTyJ,GACVE,GAAc,GAKlB,IAAME,EAAY,SAAC,GAAY,EAAV7J,MACPyJ,GACVE,GAAc,IAelB,OAVA7H,qBAAU,WAIR,OAHAgI,OAAOC,iBAAiB,UAAWH,GACnCE,OAAOC,iBAAiB,QAASF,GAE1B,WACLC,OAAOE,oBAAoB,UAAWJ,GACtCE,OAAOE,oBAAoB,QAASH,MAErC,IAEIH,GCCMO,MA9Bf,SAA2BC,EAAKC,GAC9BrI,qBACE,WACE,IAAMsI,EAAW,SAAAxH,GAEVsH,EAAIG,UAAWH,EAAIG,QAAQC,SAAS1H,EAAMG,SAI/CoH,EAAQvH,IAMV,OAHA2H,SAASR,iBAAiB,YAAaK,GACvCG,SAASR,iBAAiB,aAAcK,GAEjC,WACLG,SAASP,oBAAoB,YAAaI,GAC1CG,SAASP,oBAAoB,aAAcI,MAS/C,CAACF,EAAKC,KCmCKK,MA5Df,SAAmB9M,GAAQ,IAAD,EACoBsE,oBAAS,GAD7B,mBACfyI,EADe,KACAC,EADA,OAEc1I,mBAAStE,EAAMiN,MAF7B,mBAEfC,EAFe,KAEHC,EAFG,KAIhBC,EAAaC,iBAAO,MACpBC,EAAUD,iBAAO,MACjBE,EAAWF,iBAAO,MAElBG,EAAQC,EAAY,SA6B1B,OA1BAlB,EAAkBa,GAAY,WACxBL,IACFI,EAAcD,GACdF,GAAiB,OAIrB5I,qBAAU,WACJ2I,GACFQ,EAASZ,QAAQe,UAElB,CAACX,IAEJ3I,qBAAU,WACJ2I,GACES,IACAL,EAAcD,GACdF,GAAiB,MAGtB,CAACQ,IAOF,yBAAKvN,UAAU,YAAYuM,IAAKY,GAC9B,0BACEZ,IAAKc,EACLrK,QAAS,kBAAM+J,GAAiB,IAChC/M,UAAS,0CACN8M,EAA2B,SAAX,WAGlBG,GAEH,8BACEV,IAAKe,EACLnN,SAjBN,SAAsB8E,GAClBiI,EAAcjI,EAAMG,OAAOhE,QAiBzBpB,UAAS,4CACP8M,EAAgB,SAAW,UAE7BxM,YAAY,oCCzCtB,IAAMmJ,EAXN,WACE,IAGI,OAFAM,aAAaC,QAAQ,iBAAkB,QACvCD,aAAaE,WAAW,mBACjB,EAEX,MAAOrB,GACH,OAAO,GAIiBc,GA0KfgE,EAxKK,SAAC,GAAQ,qBAEiBrJ,mBAKvCoF,GACMU,KAAKC,MAAML,aAAaM,QhBXT,UgBaf,IAVe,mBAEnBV,EAFmB,KAEH2B,EAFG,OAGEjH,mBAYtBoF,GACOtD,SAAS4D,aAAaM,QhBlBP,UgBkBgC,KAE/C,GAlBa,mBAGnBR,EAHmB,aAIUxF,mBAAS,KAJnB,mBAInBc,EAJmB,KAIPwI,EAJO,KAsB1B,SAAS7C,EAAcR,EAAWT,GAC5BJ,IACAM,aAAaC,QhB3BO,OgB2BeG,KAAKI,UAAUD,IAClDP,aAAaC,QhB3BS,SgB2BeH,IA2B3C,IAAM+D,EAXN,WACE,IAAMC,EAAW,GAOjB,OANAlE,EAAeT,SAAQ,SAACC,GAClBA,EAAKf,WACPyF,EAAS9K,KAAKoG,MAIX0E,EAGaC,GAMtB,IAAIC,EAAwBH,EAAcpD,QAAO,SAACrB,GAChD,GAAmB,OAAfhE,EACF,OAAOgE,EAAKb,cAAczG,MAAMmM,cAAcC,SAAS9I,EAAW6I,kBA5D5C,EAiEgB3J,mBACxC,iCAlEwB,mBAiEnB6J,EAjEmB,KAiEJC,EAjEI,KAqE1B,OAAK1E,EAQD,yBAAKzJ,UAAU,YACb,wBAAIA,UAAU,mBAAd,qBACA,yBAAKA,UAAU,mBACb,2BAAOgI,QAAQ,kBAAf,kCACA,2BACE1F,GAAG,iBACHjC,KAAK,OACLC,YAAY,uBACZc,MAAO+D,EACPhF,SAhCV,SAAsByI,GACpB+E,EAAc/E,EAAExD,OAAOhE,WAkCnB,yBAAKpB,UAAU,mBAEX+N,EAAsB5L,KAAI,SAACgH,GACzB,OACE,yBAAKnJ,UAAU,gBAAgBqC,IAAK8G,EAAKb,cAAchG,IACrD,yBAAKtC,UAAU,uBACb,yBAAKA,UAAU,sBAEuB,IAApCmJ,EAAKb,cAAc7F,aACjB,KACA,yBAAKzC,UAAU,wCACb,yBAAKc,QAAQ,YAAYd,UAAU,0CAC/B,0BAAMA,UAAU,+BAChBgB,EAAE,sFAIF,0BAAMhB,UAAU,yBAChB0B,gBAAgB,UAChBV,EAAE,sFAIF,0BAAMW,EAAE,KAAKC,EAAE,OAAO5B,UAAU,kCAAkCmJ,EAAKb,cAAc7F,gBAK1D,OAAnC0G,EAAKb,cAAc9F,YACjB,yBAAKjB,IAAK5B,EhB7HJ,QgB6H+BwJ,EAAKb,cAAc9F,YAAahB,IAAI,iBACzE,yBAAKD,IAAK3B,EAAgB4B,IAAI,iBAEhC,kBAAC,IAAD,CAAMxB,UAAU,wBAAwBuC,GAAE,iBAAY4G,EAAKb,cAAchG,KACvE,0CAEF,yBAAKtC,UAAU,uBACb,wBAAIA,UAAU,wBAAwBmJ,EAAKb,cAAczG,YAEjBC,IAApCqH,EAAKb,cAAcvG,aACjB,0BAAM/B,UAAU,uBAAuBmJ,EAAKb,cAAcvG,aAAaC,UAAU,EAAE,IACnF,OAIV,yBAAKhC,UAAU,uBACb,4BAAQA,UAAU,YAAYgD,QAAS,SAAC4F,GAAD,OAnG3D,SAAmCtG,EAAIyI,GACrC,IAAIJ,EAAchB,EAAexH,KAAI,SAACgH,GAAD,OAAUA,EAAKb,cAAchG,KAAOA,EAAK6G,EAA/B,eAA0CA,EAA1C,CAAgDf,UAAW2C,OAC1GO,EAAkBX,GAClBG,EAAcH,EAAad,GAgGqChB,CAA0BM,EAAKb,cAAchG,IAAI,IAAQT,MAAM,wBAC3G,yBAAKrB,MAAM,6BAA6BC,cAAY,OAAOC,UAAU,QAAQC,cAAY,MAAMC,YAAU,YAAYC,KAAK,MAAMC,QAAQ,eACpI,0BAAMC,KAAK,eAAeC,EAAE,suBAGlC,4BAAQhB,UAAU,aAAagD,QAAS,SAAC4F,GAAD,OA9G5D,SAA6BtG,GAC3B,IAAIqI,EAAchB,EAAea,QAAO,SAACrB,GAAD,OAAUA,EAAKb,cAAchG,KAAOA,KAC5EgJ,EAAkBX,GAClBG,EAAcH,EAAad,GA2GsCf,CAAoBK,EAAKb,cAAchG,KAAKT,MAAM,mBAC/F,yBAAKrB,MAAM,6BAA6BC,cAAY,OAAOC,UAAU,QAAQC,cAAY,MAAMC,YAAU,QAAQC,KAAK,MAAMC,QAAQ,eAChI,0BAAMC,KAAK,eAAeC,EAAE,mPAKtC,yBAAKhB,UAAU,wBACf,kBAAC,EAAD,CACE4N,cAAeA,EACfvC,QAASlC,EAAKb,cAAchG,GAC5BsI,OAAQzB,EAAKyB,OACbQ,WAAY,KACd,kBAAC,EAAD,CACE4B,KAAMkB,EACNE,UAAW,SAAApB,GAAI,OAAImB,EAAiBnB,aAnFlD,yBAAK1K,GAAG,gBAAR,mCCxES+L,G,iLAdX,OACE,6BACE,uCACA,kV,GALahI,IAAMC,WCY3B,IAAMmD,GAXN,WACI,IAGI,OAFAM,aAAaC,QAAQ,iBAAkB,QACvCD,aAAaE,WAAW,mBACjB,EAEX,MAAOrB,GACH,OAAO,GAIec,GA2Pf4E,GAzPK,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnBpK,qBAAW,WACPqK,IACAC,MACD,IAJ4B,MAMPpK,mBAAS,IANF,mBAMxB8E,EANwB,KAMlBa,EANkB,OAOD3F,mBAAS,IAPR,mBAOxBqK,EAPwB,KAOfC,EAPe,OAQGtK,oBAAS,GARZ,mBAQxBG,EARwB,KAQbC,EARa,KAUzB+J,EAAS,uCAAG,gCAAA9J,EAAA,6DACVC,EAAMjF,EAAa6O,EAAMK,OAAOtM,GAAKzC,EACzC4E,GAAa,GAFC,SAGUG,MAAM,GAAD,OAAID,IAHnB,cAGR6J,EAHQ,gBAIKA,EAAU3J,OAJf,OAIRsE,EAJQ,OAKda,EAAQb,GACR9F,QAAQC,IAAI6F,GACZ1E,GAAa,GAPC,4CAAH,qDAUTgK,EAAY,uCAAG,gCAAA/J,EAAA,6DACbC,EAAMjF,EAAa6O,EAAMK,OAAOtM,GlB3BnB,UkB2BoCzC,EACrD4E,GAAa,GAFI,SAGUG,MAAM,GAAD,OAAID,IAHnB,cAGX8J,EAHW,gBAIKA,EAAa5J,OAJlB,aAIX6J,EAJW,QAKL3J,QAAU,GALL,2CAMN,GANM,QAQb4J,EAAWD,GARE,QAUjBjK,GAAa,GAVI,4CAAH,qDAalB,SAASoK,EAAQC,GACb,IAAI,IAAIzM,KAAOyM,EACX,GAAGA,EAAIC,eAAe1M,GAClB,OAAO,EAEf,OAAO,EAtCoB,MA0CagC,mBAIrCoF,IACQU,KAAKC,MAAML,aAAaM,QlB/Cf,UkBiDT,IAjDgB,mBA0CxBV,EA1CwB,KA0CR2B,EA1CQ,OA2CHjH,mBAWpBoF,IACOtD,SAAS4D,aAAaM,QlBtDX,UkBsDoC,KAE/C,GAzDgB,mBA2CxBR,EA3CwB,KA2ChBmF,EA3CgB,KA6D/B,SAASlE,EAAcR,EAAWT,GAC1BJ,KACAM,aAAaC,QlB/DG,OkB+DmBG,KAAKI,UAAUD,IAClDP,aAAaC,QlB/DK,SkB+DmBH,IAI7C,SAASa,EAAiBpI,GACtB,OAAOqH,EAAesF,MAAK,SAAC9F,GAAD,OAAUA,EAAKb,cAAchG,KAAOA,KAGnE,SAAS4M,EAAY5M,GAEjB,OADgBqH,EAAea,QAAO,SAAArB,GAAI,OAAIA,EAAKb,cAAchG,KAAOA,KACvD2M,MAAK,SAAC9F,GAAD,OAA6B,IAAnBA,EAAKf,aAwCzC,SAASU,EAAoBxG,GACzB,IAAIqI,EAAchB,EAAea,QAAO,SAACrB,GAAD,OAAUA,EAAKb,cAAchG,KAAOA,KAC5EgJ,EAAkBX,GAClBG,EAAcH,EAAad,GAG/B,SAAShB,EAA0BvG,EAAIyI,GACnC,IAAIJ,EAAchB,EAAexH,KAAI,SAACgH,GAAD,OAAUA,EAAKb,cAAchG,KAAOA,EAAK6G,EAA/B,eAA0CA,EAA1C,CAAgDf,UAAW2C,OAC1GO,EAAkBX,GAClBG,EAAcH,EAAad,GAC3BxG,QAAQC,IAAIqH,GAIhB,OAAKlB,GAIMjF,EACC,yCAIJ,oCAE2B,OAAvB2E,EAAKlF,cACJ,yBAAKjE,UAAU,WAAWuB,IlBrJX,4BkBqJkCC,IAAI,eACrD,yBAAKxB,UAAU,WAAWuB,IlBvJf,sCkBuJiC4H,EAAKlF,cAAezC,IAAI,eAEzE,yBAAKxB,UAAU,WACX,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,kBACTmJ,EAAKtH,WAEoBC,IAAtBqH,EAAKpH,aACH,KACA,kCAAQoH,EAAKpH,aAAaC,UAAU,EAAE,GAAtC,MAIW,KAAjBmH,EAAKgG,QACH,KACA,wBAAInP,UAAU,oBAAoBmJ,EAAKgG,SAGzChG,EAAKiG,QAAUjG,EAAKiG,OAAOjN,KAAI,SAACkN,GAC5B,OACI,0BAAMrP,UAAU,iBAAiBqC,IAAKgN,EAAMC,MAA5C,IAAoDD,EAAMC,SAK5C,IAAtBnG,EAAK1G,aACH,GACA,yBAAKzC,UAAU,sCACb,yBAAKc,QAAQ,YAAYd,UAAU,wCAC/B,0BAAMA,UAAU,YAChBgB,EAAE,sFAIF,0BAAMhB,UAAU,uBAChB0B,gBAAgB,UAChBV,EAAE,sFAIF,0BAAMW,EAAE,KAAKC,EAAE,OAAO5B,UAAU,cAAcmJ,EAAK1G,iBAKnE,yBAAKzC,UAAU,oBACX,yBAAKA,UAAU,gBAEU,OAArBmJ,EAAK3G,YACH,yBAAKjB,IAAG,qFAAwFC,IAAI,iBACpG,yBAAKD,IAAG,UAAK5B,ElBlMT,QkBkMgCwJ,EAAK3G,aAAehB,IAAI,iBAE9D,yBAAKxB,UAAU,iBAEX0K,EAAiBvB,EAAK7G,MAAQ4M,EAAY/F,EAAK7G,IAC5C,4BAAQtC,UAAU,gBAAgBgD,QAAS,SAAC4F,GAAD,OAAOE,EAAoBK,EAAK7G,KAAKT,MAAM,6BACrF,yBAAKrB,MAAM,6BAA6BC,cAAY,OAAOC,UAAU,QAAQC,cAAY,MAAMC,YAAU,QAAQC,KAAK,MAAMC,QAAQ,eAChI,0BAAMC,KAAK,eAAeC,EAAE,sNAGjC,4BAAQhB,UAAU,cAAcgD,QAAS,SAAC4F,GAAD,OA5HpE,SAA0BN,GACtB,IAAImC,EAAY8E,OAAO1F,GAAU,EACjC,GAAKa,EAAiBpC,EAAchG,IAWzB4M,EAAY5G,EAAchG,KACjCuG,EAA0BP,EAAchG,IAAI,OAZP,CACrC,IAMEqI,EANY,CAAC,CACXrI,GAAImI,EACJnC,cAAeA,EACfF,WAAW,EACXwC,OAAQ,IAEYC,OAAOlB,GACjC2B,EAAkBX,GAClBqE,EAAUvE,GACVK,EAAcH,EAAaF,IAgH0C5C,CAAiBsB,IAAOtH,MAAM,yBAC7E,yBAAKrB,MAAM,6BAA6BC,cAAY,OAAOC,UAAU,QAAQC,cAAY,MAAMC,YAAU,QAAQC,KAAK,MAAMC,QAAQ,eAChI,0BAAMC,KAAK,eAAeC,EAAE,sNAKpCkO,EAAY/F,EAAK7G,IACd,4BAAQtC,UAAU,WAAWgD,QAAS,SAAC4F,GAAD,OAAOE,EAAoBK,EAAK7G,KAAKT,MAAM,6BAChF,yBAAKrB,MAAM,6BAA6BC,cAAY,OAAOC,UAAU,QAAQC,cAAY,MAAMC,YAAU,MAAMC,KAAK,MAAMC,QAAQ,eAC9H,0BAAMC,KAAK,eAAeC,EAAE,iVAGjC,4BAAQhB,UAAU,SAASgD,QAAS,SAAC4F,GAAD,OAvH/D,SAAqBN,GACjB,IAAImC,EAAY8E,OAAO1F,GAAU,EACjC,GAAKa,EAAiBpC,EAAchG,IAahCuG,EAA0BP,EAAchG,IAAI,OAbP,CACrC,IAOIqI,EAPU,CAAC,CACXrI,GAAImI,EACJnC,cAAeA,EACfF,WAAW,EACXwC,OAAQ,IAGcC,OAAOlB,GACjC2B,EAAkBX,GAClBqE,EAAUvE,GACVK,EAAcH,EAAaF,IA0GmC+E,CAAYrG,IAAOtH,MAAM,mBACnE,yBAAKrB,MAAM,6BAA6BC,cAAY,OAAOC,UAAU,QAAQC,cAAY,MAAMC,YAAU,YAAYC,KAAK,MAAMC,QAAQ,eACpI,0BAAMC,KAAK,eAAeC,EAAE,wuBAOxC6N,EAAQH,GACN,yBAAK1O,UAAU,mCACb,wCACA,2BAAImJ,EAAKsG,WAEX,yBAAKzP,UAAU,gBACb,4BAAQ6B,MlB7OT,iCkB6O8B6M,EAAQ3J,QAAQ,GAAG1C,IAAKd,IlB7OtD,iCkB6OyEmN,EAAQ3J,QAAQ,GAAG1C,QAKnGwM,EAAQH,GACN,KACA,yBAAK1O,UAAU,iBACb,wCACA,2BAAImJ,EAAKsG,YAIrB,yBAAKzP,UAAU,sBAjHX,yBAAKsC,GAAG,gBAAR,mCCpGDoN,G,iLA9BX,OACE,oCACE,kBAAC,IAAD,KACE,4BAAQ1P,UAAU,UACd,yBAAKA,UAAU,WACX,yBAAKA,UAAU,gBAAe,kBAAC,IAAD,CAAS2P,OAAK,EAACpN,GAAG,KAAI,yBAAKhB,IAAI,sBAAsBC,IAAI,gBACvF,yBAAKxB,UAAU,OACX,wBAAIA,UAAU,aACV,wBAAIA,UAAU,aAAY,kBAAC,IAAD,CAAS2P,OAAK,EAACpN,GAAG,KAAlB,SAC1B,wBAAIvC,UAAU,aAAY,kBAAC,IAAD,CAASuC,GAAG,cAAZ,cAC1B,wBAAIvC,UAAU,aAAY,kBAAC,IAAD,CAASuC,GAAG,gBAAZ,iBAC1B,wBAAIvC,UAAU,aAAY,kBAAC,IAAD,CAASuC,GAAG,WAAZ,eAK1C,0BAAMvC,UAAU,QACV,kBAAC,IAAD,CAAO2P,OAAK,EAACC,KAAK,IAAIC,UAAW7K,IACjC,kBAAC,IAAD,CAAO4K,KAAK,aAAaC,UAAWrG,IACpC,kBAAC,IAAD,CAAOoG,KAAK,eAAeC,UAAWnC,IACtC,kBAAC,IAAD,CAAOkC,KAAK,UAAUC,UAAWxB,KACjC,kBAAC,IAAD,CAAOuB,KAAK,aAAaC,UAAWvB,Y,GAvBlChI,aCDEwJ,QACW,cAA7B3D,OAAO4D,SAASC,UAEe,UAA7B7D,OAAO4D,SAASC,UAEhB7D,OAAO4D,SAASC,SAASzB,MACvB,2DCZN0B,IAASC,OAAO,kBAAC,GAAD,MAAStD,SAASuD,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9K,MAAK,SAAA+K,GACjCA,EAAaC,kB","file":"static/js/main.ab160c06.chunk.js","sourcesContent":["export const URL_SEARCH = 'https://api.themoviedb.org/3/search/movie';\r\nexport const URL_DETAIL = 'https://api.themoviedb.org/3/movie/';\r\nexport const URL_POPULAR = 'https://api.themoviedb.org/3/movie/popular';\r\nexport const URL_PERSON = 'https://api.themoviedb.org/3/person/';\r\nexport const URL_IMG = 'https://image.tmdb.org/t/p/';\r\nexport const DEFAULT_POSTER = 'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie-300x450.jpg';\r\nexport const URL_BACKDROP = 'https://image.tmdb.org/t/p/original';\r\nexport const DEFAULT_BACKDROP = '/img/default_backdrop.jpg'\r\nexport const URL_YOUTUBE = 'https://www.youtube.com/embed/';\r\nexport const URL_CAST = '/casts';\r\nexport const URL_VIDEO = '/videos';\r\nexport const IMG_SIZE_XSMALL = 'w45/';\r\nexport const IMG_SIZE_SMALL = 'w185/';\r\nexport const IMG_SIZE_LARGE = 'w342/';\r\nexport const CAST_MAX_NUM = 5;\r\nexport const API_KEY = '?api_key=090028bc6de357f7dbfd5aeebae43718';\r\nexport const STORAGE_LIST = 'list';\r\nexport const STORAGE_NEXTID = 'nextid';\r\n","import React from 'react';\r\n/* import Autosuggest from 'react-autosuggest' */\r\n\r\nconst SearchArea = (props) => {\r\n    return (\r\n        <div className=\"search-box\">\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div className=\"search-box__input\">\r\n                    <input \r\n                        onChange={props.handleChange}\r\n                        type=\"text\"\r\n                        placeholder=\"What are you looking for?\"\r\n                        minLength={3}>\r\n\r\n                    </input>\r\n                    <button className=\"search-box__btn\" type=\"submit\" onSubmit={props.handleSubmit}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"search\" role=\"img\" viewBox=\"0 0 512 512\">\r\n                            <path fill=\"currentColor\" d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"/>\r\n                        </svg>\r\n                    </button>         \r\n                </div>\r\n                <select className=\"sort-box\" defaultValue=\"Sort\" onChange={props.handleSort}>\r\n                    <option disabled value=\"Sort\">Sort</option>\r\n                    <option value=\"Newest\">Newest</option>\r\n                    <option value=\"Oldest\">Oldest</option>\r\n                    <option value=\"RatingAsc\">By Rating Asc</option>\r\n                    <option value=\"RatingDesc\">By Rating Desc</option>\r\n                </select>\r\n            </form>\r\n        </div>        \r\n    )    \r\n}\r\n\r\nexport default SearchArea;","import React from 'react';\r\nimport { URL_IMG, IMG_SIZE_SMALL, DEFAULT_POSTER } from \"../const\"\r\n\r\nconst MovieCard = (props) => {\r\n    return (\r\n        <div className=\"movie\">\r\n            {\r\n                props.image === null \r\n                ? <img className=\"movie__pic\" src={DEFAULT_POSTER} alt=\"Movie Poster\" /> \r\n                : <img className=\"movie__pic\" src={`${URL_IMG+IMG_SIZE_SMALL+props.image}`} alt=\"Movie Poster\" />\r\n            }\r\n            <div className=\"movie__overlay\">\r\n                {\r\n                    props.voteAverage === 0\r\n                    ? null\r\n                    : <div className=\"movie__rating\">\r\n                        <svg viewBox=\"0 0 36 36\" className=\"circular-chart\">                            \r\n                            <path className=\"circle-bg\"\r\n                            d=\"M18 2.0845\r\n                                a 15.9155 15.9155 0 0 1 0 31.831\r\n                                a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                            />\r\n                            <path className=\"circle\"\r\n                            strokeDasharray=\"78, 100\"\r\n                            d=\"M18 2.0845\r\n                                a 15.9155 15.9155 0 0 1 0 31.831\r\n                                a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                            />\r\n                            <text x=\"18\" y=\"21.5\" className=\"percentage\">{props.voteAverage}</text>\r\n                        </svg>\r\n                    </div>\r\n                }\r\n                <div className=\"movie__info\">\r\n                    <h3 className=\"movie__title\">{props.title}</h3>\r\n                    {\r\n                        props.release_date === undefined\r\n                        ? null\r\n                        : <div className=\"movie__date\">\r\n                            <span>Release Date: {props.release_date.substring(0,4)}</span>                                                \r\n                        </div>                    \r\n                    }                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MovieCard","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport MovieCard from './MovieCard'\r\n\r\nconst MovieList = (props) => {\r\n    // if\r\n        \r\n    return (\r\n        <div className=\"movies__list\">\r\n            {                                \r\n                props.movies.map((movie) => {                     \r\n                    return (\r\n                        <Link key={movie.id} to={`/movie/${movie.id}`}>                                                        \r\n                            <MovieCard                                 \r\n                                key={movie.id} \r\n                                image={movie.poster_path}\r\n                                title={movie.title}\r\n                                voteAverage={movie.vote_average} \r\n                                release_date={movie.release_date}\r\n                                movies={props.movies}\r\n                            />  \r\n                        </Link>                      \r\n                    )                  \r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieList","import React from 'react';\r\n\r\nconst Pagination = (props) => {\r\n    const pageLinks = [];\r\n\r\n    for(let i = 1; i <= props.pages; i++) {\r\n        let activePage = props.currentPage === i ? 'activePage' : '';\r\n\r\n        pageLinks.push(\r\n            <li \r\n                className={`pages__number ${activePage}`} \r\n                key={i} \r\n                onClick={() => props.nextPage(i)}\r\n            >\r\n                <button>{i}</button>\r\n            </li>)\r\n    }\r\n\r\n    return (\r\n        <ul className=\"pages\">\r\n            { \r\n                props.currentPage > 1 \r\n                ? <li className={`pages__number pages__arrow`} onClick={() => props.nextPage(props.currentPage - 1)}>\r\n                    <button>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"angle-double-left\" role=\"img\" viewBox=\"0 0 448 512\">\r\n                            <path fill=\"currentColor\" d=\"M223.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L319.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L393.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34zm-192 34l136 136c9.4 9.4 24.6 9.4 33.9 0l22.6-22.6c9.4-9.4 9.4-24.6 0-33.9L127.9 256l96.4-96.4c9.4-9.4 9.4-24.6 0-33.9L201.7 103c-9.4-9.4-24.6-9.4-33.9 0l-136 136c-9.5 9.4-9.5 24.6-.1 34z\"/>\r\n                        </svg>\r\n                    </button>\r\n                </li>\r\n                : \"\"\r\n            }\r\n            { pageLinks }\r\n            { \r\n                props.currentPage < props.pages \r\n                ? <li className={`pages__number pages__arrow`} onClick={() => props.nextPage(props.currentPage + 1)}>\r\n                    <button>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"angle-double-right\" role=\"img\" viewBox=\"0 0 448 512\">\r\n                            <path fill=\"currentColor\" d=\"M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34zm192-34l-136-136c-9.4-9.4-24.6-9.4-33.9 0l-22.6 22.6c-9.4 9.4-9.4 24.6 0 33.9l96.4 96.4-96.4 96.4c-9.4 9.4-9.4 24.6 0 33.9l22.6 22.6c9.4 9.4 24.6 9.4 33.9 0l136-136c9.4-9.2 9.4-24.4 0-33.8z\"/>\r\n                        </svg>\r\n                    </button>\r\n                </li>\r\n                : \"\"\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Pagination","import React from \"react\";\r\nimport { URL_BACKDROP, DEFAULT_BACKDROP } from \"../const\"\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst PopularList = (props) => {   \r\n    const movies = props.movies.slice(0, 10);\r\n    console.log(movies);\r\n    return (                                                     \r\n        <div className=\"popular-list\">\r\n            <h3 className=\"popular-list__title\">Trending</h3>\r\n            <Slider\r\n                speed={500}\r\n                slidesToShow={1}\r\n                slidesToScroll={1}\r\n                centerMode={true}\r\n                variableWidth={true}\r\n                infinite={true}\r\n                arrows={false}\r\n                autoplay={true}\r\n                autoplaySpeed={3000}\r\n                centerPadding={0}\r\n            >\r\n                {\r\n                movies.map((movie) =>{\r\n                    return (                        \r\n                        <div key={movie.id} className=\"popular-item\">\r\n                            <h3 className=\"popular-item__title\">{movie.title}</h3>\r\n                            {\r\n                            movie.backdrop_path === null \r\n                            ?<img src={DEFAULT_BACKDROP} alt=\"Background\"/> \r\n                            :<img src={URL_BACKDROP+movie.backdrop_path} alt=\"Background\"/> \r\n                            }\r\n                            <Link className=\"popular-item__detail\" to={`/movie/${movie.id}`}>\r\n                                <span>Details</span>\r\n                            </Link>\r\n                            {\r\n                            movie.vote_average === 0\r\n                            ? null\r\n                            : <div className=\"movie__rating movie__rating_popular\">\r\n                                <svg viewBox=\"0 0 36 36\" className=\"circular-chart circular-chart_popular\">                            \r\n                                    <path className=\"circle-bg circle-bg_popular\"\r\n                                    d=\"M18 2.0845\r\n                                        a 15.9155 15.9155 0 0 1 0 31.831\r\n                                        a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                    />\r\n                                    <path className=\"circle circle_popular\"\r\n                                    strokeDasharray=\"78, 100\"\r\n                                    d=\"M18 2.0845\r\n                                        a 15.9155 15.9155 0 0 1 0 31.831\r\n                                        a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                    />\r\n                                    <text x=\"18\" y=\"21.5\" className=\"percentage percentage_popular\">{movie.vote_average}</text>\r\n                                </svg>\r\n                            </div>\r\n                            }\r\n                        </div>\r\n                    )\r\n                })\r\n                }\r\n            </Slider>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default PopularList","import React, { useState, useEffect } from \"react\";\r\nimport {URL_POPULAR, API_KEY, URL_BACKDROP, DEFAULT_BACKDROP } from \"../const\"\r\nimport PopularList from \"./PopularList\"\r\n\r\nconst Popular = ({}) => {\r\n    useEffect (() => {\r\n        fetchPopular();\r\n    }, []);\r\n\r\n    const [popular, setPopular] = useState({});\r\n    const [isLoading, setIsLoading] = useState({isLoading:false});\r\n\r\n    const fetchPopular = async () => {\r\n        let url = `${URL_POPULAR + API_KEY}&language=en-US&page=1`\r\n        setIsLoading(true);\r\n        const fetchPopular = await fetch(`${url}`);\r\n        const data = await fetchPopular.json();\r\n        setPopular(data.results);\r\n        setIsLoading(false);\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (<h1>Loading..</h1>)\r\n\r\n    } else {\r\n        return (\r\n            <>                \r\n                <PopularList movies={popular}/>                \r\n            </>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default Popular","import React from \"react\";\r\nimport { URL_SEARCH, API_KEY } from \"../const\"\r\nimport SearchArea from \"../SearchArea\"\r\nimport MovieList from \"./MovieList\"\r\nimport Pagination from \"./Pagination\"\r\nimport Popular from \"./Popular\"\r\n \r\nclass Movies extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      movies: [],\r\n      searchTerm: \"\",\r\n      totalPages: 0,\r\n      totalResults: 0,\r\n      currentPage: 1,\r\n      sort: \"\"\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({searchTerm: event.target.value})    \r\n  }\r\n  \r\n\r\n  handleSubmit = (event) => { \r\n    let url = URL_SEARCH + API_KEY   \r\n    event.preventDefault();\r\n    //\r\n    const form = event.target;\r\n    fetch(`${url}&query=${this.state.searchTerm}`)\r\n    .then(data => data.json())\r\n    .then(data => {\r\n      this.setState({movies: [...data.results], totalResults: data.total_results, totalPages: data.total_pages})      \r\n      form.reset();\r\n      console.log(data);\r\n    })\r\n  }  \r\n\r\n  nextPage = (pageNumber) => {   \r\n    let url = URL_SEARCH + API_KEY  \r\n    fetch(`${url}&query=${this.state.searchTerm}&page=${pageNumber}`)\r\n    .then(data => data.json())\r\n    .then(data => {      \r\n      this.setState({movies: [...data.results], currentPage: pageNumber})\r\n    })\r\n  }  \r\n\r\n  handleSort = (event) => {    \r\n    this.setState({sort: event.target.value})\r\n  }\r\n\r\n  render() {\r\n          \r\n    const numberPages = () => {      \r\n      if (this.state.totalPages <= 5) {\r\n        return this.state.totalPages;\r\n      } else {\r\n        return 5\r\n      }      \r\n    }\r\n\r\n    const sortedMovies = this.state.movies.sort((a,b) => {\r\n      if(this.state.sort === \"Newest\") {\r\n        return parseInt(b.release_date) - parseInt(a.release_date)\r\n      }\r\n      else if(this.state.sort === \"Oldest\") {\r\n        return parseInt(a.release_date) - parseInt(b.release_date)\r\n      }\r\n      else if(this.state.sort === \"RatingAsc\") {\r\n        return a.vote_average - b.vote_average\r\n      }\r\n      else if(this.state.sort === \"RatingDesc\") {\r\n        return b.vote_average - a.vote_average\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div className=\"movies\">\r\n        <SearchArea \r\n          searchTerm={this.state.searchTerm}\r\n          handleSubmit={this.handleSubmit}\r\n          handleChange={this.handleChange}\r\n          handleSort={this.handleSort}\r\n        />\r\n        {\r\n          this.state.movies.length === 0\r\n          ? <Popular />\r\n          : <MovieList movies={sortedMovies} />\r\n        }\r\n        {\r\n          this.state.totalResults > 20 \r\n          ? <Pagination pages={numberPages()} nextPage={this.nextPage} currentPage={this.state.currentPage} />\r\n          : null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Movies;","import React, { Component } from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport debounce from 'lodash/debounce';\r\nimport { URL_SEARCH, API_KEY, URL_IMG, IMG_SIZE_XSMALL, DEFAULT_POSTER } from '../const';\r\n\r\n\r\nconst getSuggestionValue = suggestion => suggestion.title;\r\n\r\nconst renderSuggestion = suggestion => {\r\n    return (    \r\n    <div className=\"suggestion\">\r\n        <div className=\"suggestion__pic\"> \r\n            {\r\n                suggestion.poster_path !== null\r\n                ? <img src={URL_IMG + IMG_SIZE_XSMALL + suggestion.poster_path} alt=\"Movie Poster\"/>    \r\n                : <img src={DEFAULT_POSTER} alt=\"Movie Poster\"/>             \r\n            }\r\n        </div>\r\n        <div className=\"suggestion__content\">\r\n            <h3 className=\"suggestion__title\">{suggestion.title}</h3>\r\n            <span>\r\n                {\r\n                (suggestion.release_date === \"\" || suggestion.release_date === undefined)\r\n                ? \"\"\r\n                : suggestion.release_date.substring(0,4)\r\n                }\r\n            </span>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nclass WatchlistInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n            suggestions: [],\r\n            noResult: false,\r\n            isLoading: false\r\n        };\r\n    }\r\n\r\n    getSuggestions = value => {\r\n        const escapedValue = encodeURIComponent(value.trim());\r\n        const url = `${URL_SEARCH + API_KEY}&query=${escapedValue}`;\r\n        let suggestions = [];\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n        if(value.trim().length > 2){\r\n            fetch(url)\r\n                .then(data => data.json())\r\n                .then(\r\n                    (data) => {\r\n                        if(data.results){\r\n                            suggestions = data.results;\r\n                            this.setState({\r\n                                suggestions: suggestions,\r\n                                noResults: suggestions.length === 0,\r\n                                isLoading: false\r\n                            });\r\n                        }else{\r\n                            this.setState({\r\n                                suggestions: [],\r\n                                noResults: true,\r\n                                isLoading: false\r\n                            });\r\n                        }\r\n                    },\r\n                    (error) => {\r\n                        console.log(error.Error);\r\n                        this.setState({\r\n                            suggestions: [],\r\n                            noResults: false,\r\n                            isLoading: false\r\n                        });\r\n                    }\r\n                );\r\n        }\r\n    };\r\n\r\n    onChange = (event, { newValue }) => {\r\n        this.setState({\r\n            value: newValue\r\n        });\r\n    };\r\n\r\n    debouncedSuggestions = debounce((value) => {\r\n        this.getSuggestions(value);\r\n    }, 500);\r\n\r\n    onSuggestionsFetchRequested = ({ value }) => {\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n        this.debouncedSuggestions(value);\r\n    };\r\n\r\n    onSuggestionsClearRequested = () => {\r\n        this.setState({\r\n            suggestions: [],\r\n            noResults: false,\r\n            isLoading: false\r\n        });\r\n    };\r\n\r\n    onSuggestionSelected = (event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) => {\r\n        this.setState({\r\n            suggestions: [],\r\n            value: '',\r\n            noResults: false,\r\n            isLoading: false\r\n        });\r\n        this.props.addWatchlistItem( suggestion );\r\n    }\r\n\r\n    render() {\r\n        const { value, suggestions, noResults, isLoading } = this.state;\r\n        const inputProps = {\r\n            placeholder: 'type in something...',\r\n            value,\r\n            onChange: this.onChange,            \r\n            id: 'watchlist-suggest-input'\r\n        };\r\n        return (\r\n            <div className=\"watchlist-input\">\r\n                <label className=\"watchlist-input__label\" htmlFor=\"watchlist-suggest-input\">Search to add Movies to your Watchlist:</label>\r\n                <div className=\"watchlist-input__control\">\r\n                    {\r\n                        isLoading \r\n                        ? (<div className=\"watchlist-input__loader\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"spinner\" role=\"img\" viewBox=\"0 0 512 512\">\r\n                                <path fill=\"currentColor\" d=\"M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z\"/>\r\n                            </svg>\r\n                        </div>)\r\n                        : \"\"                        \r\n                    }\r\n                    <Autosuggest\r\n                        suggestions={suggestions.slice(0, 10)}\r\n                        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n                        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n                        onSuggestionSelected={this.onSuggestionSelected}\r\n                        getSuggestionValue={getSuggestionValue}\r\n                        renderSuggestion={renderSuggestion}\r\n                        inputProps={inputProps}\r\n                        focusInputOnSuggestionClick={false}\r\n                    />\r\n                    {\r\n                        noResults ? (<div className=\"no-suggestions\">Sorry, no results :(</div>) : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WatchlistInput;","import React, { Component } from 'react';\r\nimport { DEFAULT_POSTER, URL_IMG, IMG_SIZE_SMALL } from '../const';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass WatchlistItem extends Component {\r\n    render() {\r\n        return (\r\n            <div tabIndex=\"0\" \r\n                className={\"list-item \"+(this.props.completed?\"seen-item\":\"up-next-item\")} \r\n                aria-label={(this.props.completed?\"Watched: \":\"Up Next: \")}>\r\n                <div className=\"list-item__wrap\">\r\n                    <div className=\"list-item__pic\">\r\n                        {\r\n                            this.props.watchlistItem.vote_average === 0\r\n                            ? null\r\n                            : <div className=\"movie__rating movie__rating_watchlist\">\r\n                                <svg viewBox=\"0 0 36 36\" className=\"circular-chart circular-chart_watchlist\">                            \r\n                                    <path className=\"circle-bg circle-bg_watchlist\"\r\n                                    d=\"M18 2.0845\r\n                                        a 15.9155 15.9155 0 0 1 0 31.831\r\n                                        a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                    />\r\n                                    <path className=\"circle circle_watchlist\"\r\n                                    strokeDasharray=\"78, 100\"\r\n                                    d=\"M18 2.0845\r\n                                        a 15.9155 15.9155 0 0 1 0 31.831\r\n                                        a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                    />\r\n                                    <text x=\"18\" y=\"21.5\" className=\"percentage percentage_watchlist\">{this.props.watchlistItem.vote_average}</text>\r\n                                </svg>\r\n                            </div>\r\n                        }\r\n                        { \r\n                            this.props.watchlistItem.poster_path !== null \r\n                            ? <img src={URL_IMG + IMG_SIZE_SMALL + this.props.watchlistItem.poster_path} alt=\"Movie Poster\"/>\r\n                            : <img src={DEFAULT_POSTER} alt=\"Movie Poster\"/>\r\n                        }\r\n                        <Link className=\"list-item__detail\" to={`/movie/${this.props.watchlistItem.id}`}>\r\n                            <span>Details</span>\r\n                        </Link>\r\n                        <div className=\"list-item__text\">\r\n                            <h3 className=\"list-item__title\">{this.props.watchlistItem.title}</h3>\r\n                            {\r\n                                this.props.watchlistItem.release_date !== undefined\r\n                                ? <span className=\"list-item__date\">{this.props.watchlistItem.release_date.substring(0,4)}</span>\r\n                                : \"\"\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"list-item__btns\">\r\n                        { \r\n                            this.props.completed ? (\r\n                                <button className=\"resetItem\" onClick={this.props.handleReset} title=\"Return to Watch List\">                                    \r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"eye-slash\" role=\"img\" viewBox=\"0 0 640 512\">\r\n                                        <path fill=\"currentColor\" d=\"M320 400c-75.85 0-137.25-58.71-142.9-133.11L72.2 185.82c-13.79 17.3-26.48 35.59-36.72 55.59a32.35 32.35 0 0 0 0 29.19C89.71 376.41 197.07 448 320 448c26.91 0 52.87-4 77.89-10.46L346 397.39a144.13 144.13 0 0 1-26 2.61zm313.82 58.1l-110.55-85.44a331.25 331.25 0 0 0 81.25-102.07 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64a308.15 308.15 0 0 0-147.32 37.7L45.46 3.37A16 16 0 0 0 23 6.18L3.37 31.45A16 16 0 0 0 6.18 53.9l588.36 454.73a16 16 0 0 0 22.46-2.81l19.64-25.27a16 16 0 0 0-2.82-22.45zm-183.72-142l-39.3-30.38A94.75 94.75 0 0 0 416 256a94.76 94.76 0 0 0-121.31-92.21A47.65 47.65 0 0 1 304 192a46.64 46.64 0 0 1-1.54 10l-73.61-56.89A142.31 142.31 0 0 1 320 112a143.92 143.92 0 0 1 144 144c0 21.63-5.29 41.79-13.9 60.11z\"/>\r\n                                    </svg>\r\n                                </button>\r\n                            ) :\r\n                            (\r\n                                <button className=\"checkItem\" onClick={this.props.handleComplete} title=\"Mark as Watched\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"eye\" role=\"img\" viewBox=\"0 0 576 512\">\r\n                                        <path fill=\"currentColor\" d=\"M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400a144 144 0 1 1 144-144 143.93 143.93 0 0 1-144 144zm0-240a95.31 95.31 0 0 0-25.31 3.79 47.85 47.85 0 0 1-66.9 66.9A95.78 95.78 0 1 0 288 160z\"/>\r\n                                    </svg>\r\n                                </button>\r\n                            )\r\n                        }\r\n                        <button className=\"deleteItem\" onClick={this.props.handleClose} title=\"Click to delete\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"trash\" role=\"img\" viewBox=\"0 0 448 512\">\r\n                                <path fill=\"currentColor\" d=\"M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z\"/>\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WatchlistItem;\r\n","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport WatchlistItem from './WatchlistItem';\r\n\r\nclass WatchlistContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleComplete = this.handleComplete.bind(this);\r\n        this.handleReset = this.handleReset.bind(this);\r\n    }\r\n\r\n    handleComplete(e, id){\r\n        this.props.updateWatchlistItemStatus(id, true);\r\n    }\r\n\r\n    handleReset(e, id){\r\n        this.props.updateWatchlistItemStatus(id, false);\r\n    }\r\n\r\n    handleClose(e, id) {\r\n        this.props.removeWatchlistItem(id);\r\n    }\r\n\r\n    getLists() {\r\n        const listItems = this.props.listItems;\r\n        const upNextItems = [];\r\n        const completedItems = [];        \r\n  \r\n        listItems.forEach((item) => {\r\n            let listItem = (\r\n                <WatchlistItem \r\n                    key={item.id}\r\n                    completed={item.completed}\r\n                    watchlistItem={item.watchlistItem}\r\n                    handleClose={(e) => this.handleClose(e,item.id)} \r\n                    handleReset={(e) => this.handleReset(e,item.id)}\r\n                    handleComplete={(e) => this.handleComplete(e,item.id)}\r\n                />\r\n            )\r\n            if (item.completed) {\r\n                completedItems.push(listItem);\r\n            } else {\r\n                upNextItems.push(listItem);\r\n            }\r\n        });\r\n  \r\n        return [upNextItems, completedItems];        \r\n    }    \r\n\r\n    render() {\r\n        const [upNextItems, completedItems] = this.getLists();\r\n        let upNextDisplay;\r\n        \r\n        if (upNextItems.length > 0) {\r\n            upNextDisplay = <div className=\"toWatch\">{upNextItems}</div>;\r\n        } else {\r\n            upNextDisplay = (\r\n              <div className=\"watchlist__empty\">\r\n                <span>how come your watchlist is empty?</span>\r\n              </div>\r\n            );\r\n        }\r\n\r\n        const completedDisplay = (\r\n            <div className=\"seen\">\r\n              <Link className=\"seen__title\" to={`/AlreadySeen`}>\r\n                Already Seen\r\n              </Link>\r\n              <div className=\"seen__list\">{completedItems}</div>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className=\"watchlist__wrap\">\r\n              { upNextDisplay }\r\n              { completedItems.length > 0 && completedDisplay }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WatchlistContainer;","import React, { Component } from 'react';\r\nimport WatchlistInput from './WatchlistInput';\r\nimport WatchlistContainer from './WatchlistContainer';\r\nimport { STORAGE_LIST, STORAGE_NEXTID } from '../const';\r\n \r\nclass Watchlist extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.canAccessLocalStorage = false;\r\n    this.canAccessLocalStorage = this.checkLocalStorage();\r\n    this.state = {\r\n      watchlistArray: this.getWatchlistStorage(),\r\n      nextID: this.getNextIDStorage(),\r\n    };\r\n  }\r\n\r\n  checkLocalStorage() {\r\n    try {\r\n      localStorage.setItem(\"watchlist_test\", \"test\");\r\n      localStorage.removeItem(\"watchlist_test\");\r\n      return true;\r\n    }\r\n    catch (e) {\r\n      this.storageError = true;\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getWatchlistStorage() {\r\n    if(this.canAccessLocalStorage) {\r\n        return JSON.parse(localStorage.getItem(STORAGE_LIST)) || [];\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  getNextIDStorage() {\r\n    if(this.canAccessLocalStorage) {\r\n      return parseInt(localStorage.getItem(STORAGE_NEXTID), 10) || 0;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  updateStorage(watchlist, nextID) {\r\n    if(this.canAccessLocalStorage) {\r\n        localStorage.setItem(STORAGE_LIST, JSON.stringify(watchlist));\r\n        localStorage.setItem(STORAGE_NEXTID, nextID); \r\n    }\r\n  }\r\n\r\n  checkDuplicateID(id){\r\n    let matches = this.state.watchlistArray.filter((item) => item.watchlistItem.id === id);\r\n    return matches.length;\r\n  }\r\n\r\n  addWatchlistItem(watchlistItem) {\r\n    let updatedID = parseInt(this.state.nextID, 10) + 1;\r\n    if(!this.checkDuplicateID(watchlistItem.id)){\r\n      let newItem = [{\r\n        id:updatedID, \r\n        watchlistItem: watchlistItem,\r\n        completed: false,\r\n        rating: 0\r\n      }];\r\n      let updatedList = newItem.concat(this.state.watchlistArray);\r\n      this.setState({\r\n        watchlistArray: updatedList,\r\n        nextID: updatedID\r\n      });\r\n      this.updateStorage(updatedList, updatedID);\r\n    }\r\n  }\r\n\r\n  removeWatchlistItem(id) {\r\n    let updatedList = this.state.watchlistArray.filter((item) => item.id !== id);\r\n    this.setState({\r\n      watchlistArray: updatedList\r\n    });\r\n    this.updateStorage(updatedList, this.state.nextID);\r\n  }\r\n\r\n  updateWatchlistItemStatus(id, status){\r\n    //clone the array and then map the cloned array to set completed on the matching ID\r\n    const watchlistArray = this.state.watchlistArray.slice(0);\r\n    let updatedList = watchlistArray.map((item) => item.id !== id ? item : {...item, completed:status});\r\n    this.setState({\r\n      watchlistArray: updatedList\r\n    });\r\n    this.updateStorage(updatedList, this.state.nextID);\r\n  }  \r\n\r\n  render() {\r\n    const watchlistArray = this.state.watchlistArray;\r\n    console.log(watchlistArray);\r\n\r\n    return (\r\n      <div className=\"watchlist\">\r\n        <h2 className=\"watchlist__title\">watchlist</h2>\r\n        <WatchlistInput \r\n          addWatchlistItem={(watchlistItem) => this.addWatchlistItem(watchlistItem)}\r\n        />\r\n        { this.canAccessLocalStorage \r\n          ? <WatchlistContainer\r\n            listItems={watchlistArray}\r\n            removeWatchlistItem={(id) => this.removeWatchlistItem(id)}\r\n            updateWatchlistItemStatus={(id, status) => this.updateWatchlistItemStatus(id, status)}\r\n          />\r\n          : <div id=\"storageError\">\r\n              Unable to access LocalStorage.\r\n            </div> \r\n        }              \r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Watchlist;","import React, { useState } from \"react\";\r\nimport { STORAGE_LIST, STORAGE_NEXTID } from \"../const\"\r\n\r\nfunction checkLocalStorage() {\r\n    try {\r\n        localStorage.setItem(\"watchlist_test\", \"test\");\r\n        localStorage.removeItem(\"watchlist_test\");\r\n        return true;\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n  }\r\n  \r\nconst canAccessLocalStorage = checkLocalStorage();\r\n\r\nconst Star = ({ selected = false, onClick = f => f }) => {\r\n    \r\n    return (\r\n        <div className={selected ? \"star selected\" : \"star\"} onClick={onClick}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"star\" role=\"img\" viewBox=\"0 0 576 512\">\r\n                <path fill=\"currentColor\" d=\"M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\"/>\r\n            </svg>\r\n        </div>    \r\n    );\r\n\r\n};\r\n\r\nconst StarRating = ({ totalStars, movieID, rating }) => {    \r\n\r\n    const [watchlistArray, setWatchlistArray] = useState( getWatchlistStorage() );\r\n    const [nextID, setNextID] = useState( getNextIDStorage() ); \r\n    const [starsSelected, selectStar] = useState(rating);\r\n\r\n    function getWatchlistStorage() {\r\n        if(canAccessLocalStorage){\r\n            return JSON.parse(localStorage.getItem(STORAGE_LIST)) || [];\r\n        } else {            \r\n            return [];\r\n        }\r\n    }\r\n\r\n    function getNextIDStorage() {\r\n        if (canAccessLocalStorage) {\r\n            return parseInt(localStorage.getItem(STORAGE_NEXTID), 10) || 0;\r\n        } else {            \r\n            return 0;\r\n        }\r\n    }\r\n\r\n    function updateStorage(watchlist, nextID){\r\n        if (canAccessLocalStorage) {\r\n            localStorage.setItem(STORAGE_LIST, JSON.stringify(watchlist));\r\n            localStorage.setItem(STORAGE_NEXTID, nextID);\r\n        }\r\n    }\r\n\r\n    function updateWatchlistItemRating(id, rating){\r\n        let updatedList = watchlistArray.map((item) => item.watchlistItem.id !== id ? item : {...item, rating: rating});\r\n        setWatchlistArray(updatedList);\r\n        updateStorage(updatedList, nextID);\r\n    }\r\n\r\n    console.log(rating);\r\n\r\n    return (\r\n    \r\n      <div className=\"star-rating\">\r\n        <h3 className=\"star-rating__title\">Rate This\r\n            <span>({starsSelected} out of {totalStars})</span>\r\n        </h3>\r\n        <div className=\"star-rating__stars\">\r\n            {\r\n                [...Array(totalStars)].map((n, star) => (\r\n                    <Star\r\n                        key={star}\r\n                        selected={star < starsSelected}\r\n                        onClick={(e) => {\r\n                            selectStar(star + 1)\r\n                            updateWatchlistItemRating(movieID, star + 1)\r\n                        }}\r\n                    />\r\n                ))                \r\n            }\r\n        </div>\r\n      </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default StarRating;","import { useState, useEffect } from \"react\";\r\n\r\n// Hook\r\nfunction useKeyPress(targetKey) {\r\n  // State for keeping track of whether key is pressed\r\n  const [keyPressed, setKeyPressed] = useState(false);\r\n\r\n  // If pressed key is our target key then set to true\r\n  function downHandler({ key }) {\r\n    if (key === targetKey) {\r\n      setKeyPressed(true);\r\n    }\r\n  }\r\n\r\n  // If released key is our target key then set to false\r\n  const upHandler = ({ key }) => {\r\n    if (key === targetKey) {\r\n      setKeyPressed(false);\r\n    }\r\n  };\r\n\r\n  // Add event listeners\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", downHandler);\r\n    window.addEventListener(\"keyup\", upHandler);\r\n    // Remove event listeners on cleanup\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", downHandler);\r\n      window.removeEventListener(\"keyup\", upHandler);\r\n    };\r\n  }, []); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  return keyPressed;\r\n}\r\n\r\nexport default useKeyPress;","import { useEffect } from \"react\";\r\n\r\n// Hook\r\nfunction useOnClickOutside(ref, handler) {\r\n  useEffect(\r\n    () => {\r\n      const listener = event => {\r\n        // Do nothing if clicking ref's element or descendent elements\r\n        if (!ref.current || ref.current.contains(event.target)) {\r\n          return;\r\n        }\r\n\r\n        handler(event);\r\n      };\r\n\r\n      document.addEventListener(\"mousedown\", listener);\r\n      document.addEventListener(\"touchstart\", listener);\r\n\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", listener);\r\n        document.removeEventListener(\"touchstart\", listener);\r\n      };\r\n    },\r\n    // Add ref and handler to effect dependencies\r\n    // It's worth noting that because passed in handler is a new ...\r\n    // ... function on every render that will cause this effect ...\r\n    // ... callback/cleanup to run every render. It's not a big deal ...\r\n    // ... but to optimize you can wrap handler in useCallback before ...\r\n    // ... passing it into this hook.\r\n    [ref, handler]\r\n  );\r\n}\r\n\r\nexport default useOnClickOutside;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport useKeypress from \"./useKeyPress\";\r\nimport useOnClickOutside from \"./useOnClickOutside\";\r\n\r\nfunction UserNotes(props) {\r\n    const [isInputActive, setIsInputActive] = useState(false);\r\n    const [inputValue, setInputValue] = useState(props.text);\r\n  \r\n    const wrapperRef = useRef(null);\r\n    const textRef = useRef(null);\r\n    const inputRef = useRef(null);\r\n  \r\n    const enter = useKeypress(\"Enter\");\r\n\r\n    // check to see if the user clicked outside of this component\r\n    useOnClickOutside(wrapperRef, () => {\r\n      if (isInputActive) {\r\n        setInputValue(inputValue);\r\n        setIsInputActive(false);\r\n      }\r\n    });\r\n\r\n    useEffect(() => {\r\n      if (isInputActive) {\r\n        inputRef.current.focus();\r\n      }\r\n    }, [isInputActive]);\r\n  \r\n    useEffect(() => {\r\n      if (isInputActive) {\r\n        if (enter) {\r\n            setInputValue(inputValue);\r\n            setIsInputActive(false);\r\n        } \r\n      }\r\n    }, [enter]);\r\n\r\n    function handleChange(event) {\r\n        setInputValue(event.target.value);\r\n    }\r\n  \r\n    return (\r\n      <div className=\"user-note\" ref={wrapperRef}>\r\n        <span\r\n          ref={textRef}\r\n          onClick={() => setIsInputActive(true)}\r\n          className={`user-note__copy user-note__copy_${\r\n            !isInputActive ? \"active\" : \"hidden\"\r\n          }`}\r\n        >\r\n          {inputValue}\r\n        </span>\r\n        <textarea\r\n          ref={inputRef}\r\n          onChange={handleChange}\r\n          className={`user-note__input user-note__input_${\r\n            isInputActive ? \"active\" : \"hidden\"\r\n          }`}\r\n          placeholder=\"Click to enter your thoughts!\"\r\n        ></textarea>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default UserNotes;","import React, { useState } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {URL_IMG, IMG_SIZE_SMALL, DEFAULT_POSTER, STORAGE_LIST, STORAGE_NEXTID } from \"../const\"\r\nimport StarRating from \"./StarRating\";\r\nimport UserNotes from \"./UserNotes\";\r\n\r\nfunction checkLocalStorage() {\r\n  try {\r\n      localStorage.setItem(\"watchlist_test\", \"test\");\r\n      localStorage.removeItem(\"watchlist_test\");\r\n      return true;\r\n  }\r\n  catch (e) {\r\n      return false;\r\n  }\r\n}\r\n\r\nconst canAccessLocalStorage = checkLocalStorage();\r\n\r\nconst AlreadySeen = ({}) => {\r\n\r\n  const [watchlistArray, setWatchlistArray] = useState( getWatchlistStorage() );\r\n  const [nextID, setNextID] = useState( getNextIDStorage() );\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  function getWatchlistStorage() {\r\n    if(canAccessLocalStorage){\r\n      return JSON.parse(localStorage.getItem(STORAGE_LIST)) || [];\r\n    } else {            \r\n      return [];\r\n    }\r\n  }\r\n\r\n  function getNextIDStorage() {\r\n    if (canAccessLocalStorage) {\r\n        return parseInt(localStorage.getItem(STORAGE_NEXTID), 10) || 0;\r\n    } else {            \r\n        return 0;\r\n    }\r\n  }\r\n\r\n  function updateStorage(watchlist, nextID) {\r\n    if (canAccessLocalStorage) {\r\n        localStorage.setItem(STORAGE_LIST, JSON.stringify(watchlist));\r\n        localStorage.setItem(STORAGE_NEXTID, nextID);\r\n    }\r\n  }\r\n\r\n  function removeWatchlistItem(id) {\r\n    let updatedList = watchlistArray.filter((item) => item.watchlistItem.id !== id);        \r\n    setWatchlistArray(updatedList);        \r\n    updateStorage(updatedList, nextID);\r\n  }\r\n\r\n  function updateWatchlistItemStatus(id, status){\r\n    let updatedList = watchlistArray.map((item) => item.watchlistItem.id !== id ? item : {...item, completed: status});\r\n    setWatchlistArray(updatedList);\r\n    updateStorage(updatedList, nextID);\r\n  }\r\n\r\n  function getSeenlist() {\r\n    const seenlist = [];\r\n    watchlistArray.forEach((item) => {\r\n      if (item.completed) {\r\n        seenlist.push(item);\r\n      }\r\n    });\r\n\r\n    return seenlist;\r\n  }\r\n\r\n  const seenlistArray = getSeenlist(); \r\n\r\n  function handleChange(e) {\r\n    setSearchTerm(e.target.value);\r\n  }\r\n\r\n  let FilteredSeenlistArray = seenlistArray.filter((item) => {\r\n    if (searchTerm !== null) {\r\n      return item.watchlistItem.title.toLowerCase().includes(searchTerm.toLowerCase());\r\n    }\r\n  })\r\n  \r\n  //USER NOTES\r\n  const [storedHeading, setStoredHeading] = useState(\r\n    \"Click to enter your thoughts!\"\r\n  );\r\n\r\n  if (!canAccessLocalStorage) {\r\n    return (\r\n      <div id=\"storageError\">\r\n            Unable to access LocalStorage.\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"seenlist\">\r\n        <h2 className=\"seenlist__title\">ALREADY SEEN LIST</h2> \r\n        <div className=\"seenlist__input\">\r\n          <label htmlFor=\"seenlist-input\">Search for a particular movie:</label>\r\n          <input \r\n            id=\"seenlist-input\"\r\n            type=\"text\" \r\n            placeholder=\"type in something...\"\r\n            value={searchTerm}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"seenlist__items\">\r\n          {\r\n            FilteredSeenlistArray.map((item) =>{\r\n              return (\r\n                <div className=\"seenlist-item\" key={item.watchlistItem.id}>\r\n                  <div className=\"seenlist-item__left\">                    \r\n                    <div className=\"seenlist-item__pic\">\r\n                    {\r\n                      item.watchlistItem.vote_average === 0\r\n                      ? null\r\n                      : <div className=\"movie__rating movie__rating_seenlist\">\r\n                          <svg viewBox=\"0 0 36 36\" className=\"circular-chart circular-chart_seenlist\">                            \r\n                              <path className=\"circle-bg circle-bg_seenlist\"\r\n                              d=\"M18 2.0845\r\n                                  a 15.9155 15.9155 0 0 1 0 31.831\r\n                                  a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                              />\r\n                              <path className=\"circle circle_seenlist\"\r\n                              strokeDasharray=\"78, 100\"\r\n                              d=\"M18 2.0845\r\n                                  a 15.9155 15.9155 0 0 1 0 31.831\r\n                                  a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                              />\r\n                              <text x=\"18\" y=\"21.5\" className=\"percentage percentage_seenlist\">{item.watchlistItem.vote_average}</text>\r\n                          </svg>\r\n                      </div>\r\n                    }\r\n                    { \r\n                      item.watchlistItem.poster_path !== null \r\n                      ? <img src={URL_IMG + IMG_SIZE_SMALL + item.watchlistItem.poster_path} alt=\"Movie Poster\"/>\r\n                      : <img src={DEFAULT_POSTER} alt=\"Movie Poster\"/>\r\n                    }\r\n                      <Link className=\"seenlist-item__detail\" to={`/movie/${item.watchlistItem.id}`}>\r\n                        <span>Details</span>\r\n                      </Link>\r\n                      <div className=\"seenlist-item__text\">\r\n                        <h3 className=\"seenlist-item__title\">{item.watchlistItem.title}</h3>\r\n                        {\r\n                            item.watchlistItem.release_date !== undefined\r\n                            ? <span className=\"seenlist-item__date\">{item.watchlistItem.release_date.substring(0,4)}</span>\r\n                            : null\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"seenlist-item__btns\">\r\n                      <button className=\"resetItem\" onClick={(e) => updateWatchlistItemStatus(item.watchlistItem.id, false)} title=\"Return to Watch List\">                                    \r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"eye-slash\" role=\"img\" viewBox=\"0 0 640 512\">\r\n                            <path fill=\"currentColor\" d=\"M320 400c-75.85 0-137.25-58.71-142.9-133.11L72.2 185.82c-13.79 17.3-26.48 35.59-36.72 55.59a32.35 32.35 0 0 0 0 29.19C89.71 376.41 197.07 448 320 448c26.91 0 52.87-4 77.89-10.46L346 397.39a144.13 144.13 0 0 1-26 2.61zm313.82 58.1l-110.55-85.44a331.25 331.25 0 0 0 81.25-102.07 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64a308.15 308.15 0 0 0-147.32 37.7L45.46 3.37A16 16 0 0 0 23 6.18L3.37 31.45A16 16 0 0 0 6.18 53.9l588.36 454.73a16 16 0 0 0 22.46-2.81l19.64-25.27a16 16 0 0 0-2.82-22.45zm-183.72-142l-39.3-30.38A94.75 94.75 0 0 0 416 256a94.76 94.76 0 0 0-121.31-92.21A47.65 47.65 0 0 1 304 192a46.64 46.64 0 0 1-1.54 10l-73.61-56.89A142.31 142.31 0 0 1 320 112a143.92 143.92 0 0 1 144 144c0 21.63-5.29 41.79-13.9 60.11z\"/>\r\n                        </svg>\r\n                      </button>\r\n                      <button className=\"deleteItem\" onClick={(e) => removeWatchlistItem(item.watchlistItem.id)} title=\"Click to delete\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"trash\" role=\"img\" viewBox=\"0 0 448 512\">\r\n                            <path fill=\"currentColor\" d=\"M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z\"/>\r\n                        </svg>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"seenlist-item__right\">\r\n                  <StarRating \r\n                    seenlistArray={seenlistArray} \r\n                    movieID={item.watchlistItem.id}\r\n                    rating={item.rating}\r\n                    totalStars={10}/>\r\n                  <UserNotes\r\n                    text={storedHeading}                    \r\n                    onSetText={text => setStoredHeading(text)}\r\n                  />\r\n                  </div>\r\n                </div>                  \r\n              )\r\n            })\r\n          }\r\n        </div>       \r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default AlreadySeen;","import React from \"react\";\r\n \r\nclass Top250 extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>TOP 250</h2>\r\n        <p>Cras facilisis urna ornare ex volutpat, et\r\n        convallis erat elementum. Ut aliquam, ipsum vitae\r\n        gravida suscipit, metus dui bibendum est, eget rhoncus nibh\r\n        metus nec massa. Maecenas hendrerit laoreet augue\r\n        nec molestie. Cum sociis natoque penatibus et magnis\r\n        dis parturient montes, nascetur ridiculus mus.</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Top250;","import React, { useState, useEffect } from \"react\";\r\nimport {URL_DETAIL, URL_VIDEO, URL_YOUTUBE, API_KEY, URL_IMG, IMG_SIZE_LARGE, URL_BACKDROP, DEFAULT_BACKDROP, STORAGE_LIST, STORAGE_NEXTID } from \"../const\"\r\n\r\nfunction checkLocalStorage() {\r\n    try {\r\n        localStorage.setItem(\"watchlist_test\", \"test\");\r\n        localStorage.removeItem(\"watchlist_test\");\r\n        return true;\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst canAccessLocalStorage = checkLocalStorage();\r\n\r\nconst MovieDetail = ({ match }) => {\r\n    useEffect (() => {\r\n        fetchItem();\r\n        fetchTrailer();\r\n    }, []);\r\n\r\n    const [item, setItem] = useState({});\r\n    const [trailer, setTrailer] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const fetchItem = async () => {\r\n        let url = URL_DETAIL + match.params.id + API_KEY\r\n        setIsLoading(true);\r\n        const fetchItem = await fetch(`${url}`);\r\n        const item = await fetchItem.json();\r\n        setItem(item);\r\n        console.log(item);\r\n        setIsLoading(false);\r\n    }\r\n\r\n    const fetchTrailer = async () => {\r\n        let url = URL_DETAIL + match.params.id + URL_VIDEO + API_KEY\r\n        setIsLoading(true);\r\n        const fetchTrailer = await fetch(`${url}`);\r\n        const trailer = await fetchTrailer.json();\r\n        if (trailer.results < 1) {\r\n            return false\r\n        } else {\r\n            setTrailer(trailer);\r\n        }\r\n        setIsLoading(false);\r\n    }\r\n\r\n    function isEmpty(obj) {\r\n        for(var key in obj) {\r\n            if(obj.hasOwnProperty(key))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    //LOCAL STORAGE      \r\n    const [watchlistArray, setWatchlistArray] = useState( getWatchlistStorage() );\r\n    const [nextID, setNextID] = useState( getNextIDStorage() );    \r\n\r\n    function getWatchlistStorage() {\r\n        if(canAccessLocalStorage){\r\n            return JSON.parse(localStorage.getItem(STORAGE_LIST)) || [];\r\n        } else {            \r\n            return [];\r\n        }\r\n    }\r\n    \r\n    function getNextIDStorage() {\r\n        if (canAccessLocalStorage) {\r\n            return parseInt(localStorage.getItem(STORAGE_NEXTID), 10) || 0;\r\n        } else {            \r\n            return 0;\r\n        }\r\n    }\r\n\r\n    function updateStorage(watchlist, nextID){\r\n        if (canAccessLocalStorage) {\r\n            localStorage.setItem(STORAGE_LIST, JSON.stringify(watchlist));\r\n            localStorage.setItem(STORAGE_NEXTID, nextID);\r\n        }\r\n    }\r\n\r\n    function checkDuplicateID(id){\r\n        return watchlistArray.some((item) => item.watchlistItem.id === id);     \r\n    }\r\n\r\n    function checkIfSeen(id){\r\n        let foundList = watchlistArray.filter(item => item.watchlistItem.id === id);\r\n        return foundList.some((item) => item.completed === true)\r\n    }\r\n\r\n    function addWatchlistItem(watchlistItem) { \r\n        let updatedID = Number(nextID) + 1;       \r\n        if (!checkDuplicateID(watchlistItem.id)) {            \r\n            let newItem = [{\r\n                id: updatedID, \r\n                watchlistItem: watchlistItem,\r\n                completed: false,\r\n                rating: 0\r\n            }];\r\n          let updatedList = newItem.concat(watchlistArray);          \r\n          setWatchlistArray(updatedList);\r\n          setNextID(updatedID);\r\n          updateStorage(updatedList, updatedID);\r\n        } else if (checkIfSeen(watchlistItem.id)) {\r\n            updateWatchlistItemStatus(watchlistItem.id, false);\r\n        }\r\n    }\r\n\r\n    function addSeenItem(watchlistItem) {\r\n        let updatedID = Number(nextID) + 1;\r\n        if (!checkDuplicateID(watchlistItem.id)) {\r\n            let newItem = [{\r\n                id: updatedID, \r\n                watchlistItem: watchlistItem,\r\n                completed: true,\r\n                rating: 0\r\n            }];\r\n    \r\n            let updatedList = newItem.concat(watchlistArray);          \r\n            setWatchlistArray(updatedList);\r\n            setNextID(updatedID);\r\n            updateStorage(updatedList, updatedID);\r\n        } else {\r\n            updateWatchlistItemStatus(watchlistItem.id, true);\r\n        }\r\n    }\r\n\r\n    function removeWatchlistItem(id) {\r\n        let updatedList = watchlistArray.filter((item) => item.watchlistItem.id !== id);        \r\n        setWatchlistArray(updatedList);        \r\n        updateStorage(updatedList, nextID);\r\n    }\r\n\r\n    function updateWatchlistItemStatus(id, status){\r\n        let updatedList = watchlistArray.map((item) => item.watchlistItem.id !== id ? item : {...item, completed: status});\r\n        setWatchlistArray(updatedList);\r\n        updateStorage(updatedList, nextID);\r\n        console.log(updatedList)\r\n    }\r\n\r\n    // RENDERING\r\n    if (!canAccessLocalStorage) {\r\n        return (<div id=\"storageError\">\r\n              Unable to access LocalStorage.\r\n        </div>)\r\n    } else if (isLoading) {\r\n        return (<h1>Loading..</h1>)\r\n\r\n    } else {\r\n        return (\r\n            <>            \r\n            {\r\n                item.backdrop_path === null \r\n                ?<img className=\"backdrop\" src={DEFAULT_BACKDROP} alt=\"Background\"/> \r\n                :<img className=\"backdrop\" src={URL_BACKDROP+item.backdrop_path} alt=\"Background\"/> \r\n            }\r\n            <div className=\"movie-d\">\r\n                <div className=\"movie-d__info\">\r\n                    <h3 className=\"movie-d__title\">\r\n                        {item.title}\r\n                        {\r\n                            item.release_date === undefined\r\n                            ? null\r\n                            : <span>({item.release_date.substring(0,4)})</span>\r\n                        }\r\n                    </h3>\r\n                    {\r\n                        item.tagline === \"\"\r\n                        ? null\r\n                        : <h3 className=\"movie-d__tagline\">{item.tagline}</h3>\r\n                    }\r\n                    {             \r\n                        item.genres && item.genres.map((genre) => {\r\n                            return (\r\n                                <span className=\"movie-d__genre\" key={genre.name}>#{genre.name}</span>\r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                        item.vote_average === 0\r\n                        ? \"\"\r\n                        : <div className=\"movie__rating movie__rating_detail\">\r\n                            <svg viewBox=\"0 0 36 36\" className=\"circular-chart circular-chart_detail\">                            \r\n                                <path className=\"circle-bg\"\r\n                                d=\"M18 2.0845\r\n                                    a 15.9155 15.9155 0 0 1 0 31.831\r\n                                    a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                />\r\n                                <path className=\"circle circle_detail\"\r\n                                strokeDasharray=\"78, 100\"\r\n                                d=\"M18 2.0845\r\n                                    a 15.9155 15.9155 0 0 1 0 31.831\r\n                                    a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                                />\r\n                                <text x=\"18\" y=\"21.5\" className=\"percentage\">{item.vote_average}</text>\r\n                            </svg>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className=\"movie-d__content\">\r\n                    <div className=\"movie-d__pic\">\r\n                    {\r\n                        item.poster_path === null \r\n                        ? <img src={`https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie-300x450.jpg`} alt=\"Movie Poster\" /> \r\n                        : <img src={`${URL_IMG+IMG_SIZE_LARGE+item.poster_path}`} alt=\"Movie Poster\" />\r\n                    }\r\n                        <div className=\"movie-d__btns\">                        \r\n                        {\r\n                            checkDuplicateID(item.id) && !checkIfSeen(item.id)\r\n                            ? (<button className=\"fromWatchlist\" onClick={(e) => removeWatchlistItem(item.id)} title=\"Remove from the watchlist\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"heart\" role=\"img\" viewBox=\"0 0 512 512\">\r\n                                    <path fill=\"currentColor\" d=\"M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z\"/>\r\n                                </svg>\r\n                            </button>)\r\n                            : (<button className=\"toWatchlist\" onClick={(e) => addWatchlistItem(item)} title=\"Add to your watchlist\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"heart\" role=\"img\" viewBox=\"0 0 512 512\">\r\n                                    <path fill=\"currentColor\" d=\"M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z\"/>\r\n                                </svg>\r\n                            </button>)                            \r\n                        }\r\n                        {\r\n                            checkIfSeen(item.id)\r\n                            ? (<button className=\"fromSeen\" onClick={(e) => removeWatchlistItem(item.id)} title=\"Click if haven't seen yet\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"eye\" role=\"img\" viewBox=\"0 0 576 512\">\r\n                                    <path fill=\"currentColor\" d=\"M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400a144 144 0 1 1 144-144 143.93 143.93 0 0 1-144 144zm0-240a95.31 95.31 0 0 0-25.31 3.79 47.85 47.85 0 0 1-66.9 66.9A95.78 95.78 0 1 0 288 160z\"/>\r\n                                </svg>\r\n                            </button>)\r\n                            : (<button className=\"toSeen\" onClick={(e) => addSeenItem(item)} title=\"Mark as watched\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"eye-slash\" role=\"img\" viewBox=\"0 0 640 512\">\r\n                                    <path fill=\"currentColor\" d=\"M320 400c-75.85 0-137.25-58.71-142.9-133.11L72.2 185.82c-13.79 17.3-26.48 35.59-36.72 55.59a32.35 32.35 0 0 0 0 29.19C89.71 376.41 197.07 448 320 448c26.91 0 52.87-4 77.89-10.46L346 397.39a144.13 144.13 0 0 1-26 2.61zm313.82 58.1l-110.55-85.44a331.25 331.25 0 0 0 81.25-102.07 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64a308.15 308.15 0 0 0-147.32 37.7L45.46 3.37A16 16 0 0 0 23 6.18L3.37 31.45A16 16 0 0 0 6.18 53.9l588.36 454.73a16 16 0 0 0 22.46-2.81l19.64-25.27a16 16 0 0 0-2.82-22.45zm-183.72-142l-39.3-30.38A94.75 94.75 0 0 0 416 256a94.76 94.76 0 0 0-121.31-92.21A47.65 47.65 0 0 1 304 192a46.64 46.64 0 0 1-1.54 10l-73.61-56.89A142.31 142.31 0 0 1 320 112a143.92 143.92 0 0 1 144 144c0 21.63-5.29 41.79-13.9 60.11z\"/>\r\n                                </svg>\r\n                            </button>)\r\n                        }\r\n                        </div>\r\n                    </div>                        \r\n                    {\r\n                        isEmpty(trailer)\r\n                        ? <div className=\"movie-d__desc movie-d__desc_top\">\r\n                            <h3>Overview</h3>\r\n                            <p>{item.overview}</p>\r\n                        </div>\r\n                        : <div className=\"movie-d__vid\">\r\n                            <iframe title={URL_YOUTUBE + trailer.results[0].key} src={URL_YOUTUBE + trailer.results[0].key}/>\r\n                        </div>\r\n                    }                    \r\n                </div>\r\n                {\r\n                    isEmpty(trailer)\r\n                    ? null\r\n                    : <div className=\"movie-d__desc\">\r\n                        <h3>Overview</h3>\r\n                        <p>{item.overview}</p>\r\n                    </div>\r\n                }                                    \r\n            </div> \r\n            <div className=\"movie-d__overlay\"> \r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieDetail","import React, { Component } from 'react';\r\nimport '../scss/App.scss';\r\nimport {\r\n  Route,\r\n  NavLink,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\nimport Movies from \"./Movies/Movies\";\r\nimport Watchlist from \"./Watchlist/Watchlist\";\r\nimport AlreadySeen from \"./AlreadySeen/AlreadySeen\";\r\nimport Top250 from \"./Top250/Top250\";\r\nimport MovieDetail from \"./Movies/MovieDetail\"\r\n\r\nclass App extends Component {\r\n  render () {\r\n    return (\r\n      <>\r\n        <HashRouter>\r\n          <header className=\"header\">\r\n              <div className=\"wrapper\">\r\n                  <div className=\"header__logo\"><NavLink exact to=\"/\"><img src=\"./img/main_logo.png\" alt=\"Main Logo\"/></NavLink></div>\r\n                  <nav className=\"nav\">\r\n                      <ul className=\"nav__list\">\r\n                          <li className=\"nav__item\"><NavLink exact to=\"/\">Home</NavLink></li>\r\n                          <li className=\"nav__item\"><NavLink to=\"/Watchlist\">Watchlist</NavLink></li>\r\n                          <li className=\"nav__item\"><NavLink to=\"/AlreadySeen\">Already Seen</NavLink></li>\r\n                          <li className=\"nav__item\"><NavLink to=\"/Top250\">Top250</NavLink></li>\r\n                      </ul>\r\n                  </nav>\r\n              </div>\r\n          </header>\r\n          <main className=\"main\">\r\n                <Route exact path=\"/\" component={Movies}/>\r\n                <Route path=\"/Watchlist\" component={Watchlist}/>\r\n                <Route path=\"/AlreadySeen\" component={AlreadySeen}/>\r\n                <Route path=\"/Top250\" component={Top250}/>\r\n                <Route path=\"/Movie/:id\" component={MovieDetail}/>\r\n          </main>\r\n        </HashRouter>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}